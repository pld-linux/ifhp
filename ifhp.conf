## $Id$
## VERSION=3.3.21

###   Supported Printers

###   SUPPORTED START
### default - HP 4M Plus, PostScript, PJL, PCL, status, pagecount support
### apple - PostScript printer, text to PS conversion, status, pagecount support
### postscript - PostScript printer, text to PS conversion, status, pagecount support
### ps - PostScript printer, text to PS conversion, status, pagecount support
### pcl - PCL only printer, write only, no status
### pcl_gs - PCL only printer, write only, no status, GhostScript to PCL conversion
### ghostscript - GhostScript PostScript to raster conversion, write only, no status
### gs - GhostScript PostScript to raster conversion, write only, no status
### hpiiisi - HP LaserJet III si, default with limited PJL capability
### hp3si - HP LaserJet III si, default with limited PJL capability
### hp4 - HP LaserJet 4 Family, HP LaserJet 4
### hp4m - HP LaserJet 4 Family, HP LaserJet 4m
### hp4si - HP LaserJet 4 Family, HP LaserJet 4si
### hp4simx - HP LaserJet 4 Family, HP LaserJet 4simx
### hp4plus - HP LaserJet 4 Family, HP LaserJet 4plus
### hp4mplus - HP LaserJet 4 Family, HP LaserJet 4mplus
### hp4v - HP LaserJet 4 Family, HP LaserJet 4v
### hp4mv - HP LaserJet 4 Family, HP LaserJet 4mv
### hp4p - HP LaserJet 4 Family, HP LaserJet 4p
### hp4mp - HP LaserJet 4 Family, HP LaserJet 4mp
### hp4pj - HP LaserJet 4 Family, HP LaserJet 4pj
### hpljpro - HP LaserJet 4 Family, HP LaserJet ljpro
### hp4lc - HP LaserJet 4 Family, HP LaserJet 4lc
### hp4m - HP LaserJet 4M, has limited pagecount capability
### hp4mplus - HP LaserJet 4MPlus
### hp4v - HP LaserJet 4 Family, HP LaserJet 4v
### hp4mv - HP LaserJet 4 Family, HP LaserJet 4mv
### hp5l - HP LaserJet 4 Family, HP LaserJet 5l
### hp6l - HP LaserJet 4 Family, HP LaserJet 6l
### hp1100 - HP LaserJet 4 Family, HP LaserJet 1100
### hp4l - Hp LaserJet 4L, PCL only
### hp4ml - HP LaserJet 4ml
### hp5p - HP LaserJet 5p
### hp5mp - HP LaserJet 5mp
### hp6p - HP LaserJet 6p
### hp6mp - HP LaserJet 6mp
### hp5 - HP LaserJet 5
### hp5si - HP LaserJet 5si
### hp5simx - HP LaserJet 5simx
### hp5m - HP LaserJet 5m
### hp5simopier - HP LaserJet 5simopier
### hp4000 - HP LaserJet 4000
### hpcolorlj - HP Color LaserJet 
### hpcolorlj5 - HP Color LaserJet 5
### hpcolorlj5m - HP Color LaserJet 5m
### hpdj1200 - HP Design Jet 1200 Family
### hppjxl300 - HP Paint Jet XL 300 Family
### hpdj1600 - HP Design Jet 1600 Family
### hpdj200 - HP DeskJet 200
### hpdj220 - HP DeskJet 220
### hpdj600 - HP DeskJet 600
### hpdj650 - HP DeskJet 650
### hpdj230 - HP DeskJet 230
### hpdj250c - HP DeskJet 250c
### hpdj330 - HP DeskJet 330
### hpdj350c - HP DeskJet 350c
### hpdj430 - HP DeskJet 430
### hpdj450c - HP DeskJet 450c
### hpdj455ca - HP DeskJet 455ca
### hpdj700 - HP DeskJet 700
### hpdj750c - HP DeskJet 750c
### hpdj750cplus - HP DeskJet 750cplus
### hpdj755cm - HP DeskJet 755cm
### hpdj2000cp - HP DeskJet 2000cp
### hp2500 - HP Design Jet 2500 - No PCL, PostScript Only
### hp2500cm - HP Design Jet 2500cm - No PCL, PostScript Only
### hp2500c - HP Design Jet 2500c - No PCL, PostScript Only
### hp2500cm - HP Design Jet 2500cm - PCL and PostScript
### hpdj2500cp - HP DesignJet 2500CP, not HP2500, HP2500c, HP2500cm
### lj3pclonly - LaserJet 3 with PCL only
### hp4500 - HP Color LaserJet Printer 4500
### hp8500 - HP Color LaserJet Printer 8500
### hp8550 - HP Color LaserJet Printer 8550
### hp5000 - HP5000  Model number: C4111A (LaserJet 5000N)
### hp5000 - HP5000 Model C4111A (LaserJet 5000)
### hp8000 - HP Laserjet 8000 Series, HP8000
### hp8100 - HP Laserjet 8000 Series, HP8100
### hp2100 - HP LaserJet 2100 Series
### hp4050 - HP4050 Series
### hp4050 - HP4050 Series Printers
### qms1725 - QMS 1725, uses appsocket, no status, PostScript only
### qms2025 - QMS Laser Printer QMS 2025, appsocket, no status, PostScript and PCL
### qms860 - QMS Laser Printer QMS 860, appsocket, no status, PostScript and PCL
### qms2060 - QMS Laser Printer QMS 2060, appsocket, no status, PostScript and PCL
### phaser - Generic Tektronics Phaser Color Printer, appsocket, PostScript only
### phaser360 - Tektronics Phaser 360 Color Printer, appsocket, PostScript only
### phaser740 - Tektronics Phaser 740 Color Printer, appsocket, PostScript only
### phaser850 - Tektronics Phaser 850 Color Printer, appsocket, PostScript only
### lexmark4039 - Lexmark 4039, Postscript only
### lexmark_optra_e312 - Lexmark Optra e312, Postscript, PCL and PJL
### gs_bj10 - Canon BubbleJet BJ10e 
### gs_bj10 - Canon BubbleJet BJ20 
### gs_bj200 - Canon BubbleJet BJ200 
### gs_bj200 - Canon BubbleJet BJC-210 B/W only 
### gs_bj200 - Canon BubbleJet BJC-240 B/W only 
### gs_bj200 - Canon BubbleJet BJC-250 B/W only 
### gs_bj200 - Canon BubbleJet BJC-70 B/W only 
### gs_bjc600 - Canon BubbleJet BJC-600 
### gs_bjc600 - Canon BubbleJet BJC-610
### gs_bjc600 - Canon BJC-50
### gs_bjc600 - Canon BJC-70 
### gs_bjc600 - Canon BJC-80 
### gs_bjc600 - Canon BJC-210 Color only
### gs_bjc600 - Canon BJC-240 Color only
### gs_bjc600 - Canon BJC-250 
### gs_bjc600 - Canon BubbleJet BJC-1000
### gs_bjc600 - Canon BubbleJet BJC-2000
### gs_bjc600 - Canon BubbleJet BJC-4000 
### gs_bjc600 - Canon BubbleJet BJC-4100 B/W only
### gs_bjc600 - Canon BubbleJet BJC-4200
### gs_bjc600 - Canon BubbleJet BJC-4300
### gs_bjc600 - Canon BubbleJet BJC-4550 
### gs_bjc600 - Canon BubbleJet BJC-6000
### gs_bjc600 - Canon MultiPASS C2500 color printer/fax/copier 
### gs_bjc800 - Canon BubbleJet BJC-800 
### gs_bjc800 - Canon BubbleJet BJC-7000 Color. 
### gs_bjc800 - Canon BubbleJet BJC-4300 Color
### gs_bjc800 - Canon BubbleJet BJC-4650 
### gs_deskjet - HP DeskJet 
### gs_deskjet - HP DeskJet Plus 
### gs_djet500 - HP DeskJet 500 B/W
### gs_djet500 - HP DeskJet Portable B/W
### gs_djet500 - HP OfficeJet 590 B/W
### gs_cdj500 - HP DeskJet 400
### gs_cdj500 - HP DeskJet 500C 
### gs_cdj500 - HP DeskJet 540C 
### gs_cdj500 - HP DeskJet 690C
### gs_cdj500 - HP DeskJet 693C
### gs_cdj550 - HP DeskJet 550C 
### gs_cdj550 - HP DeskJet 560C 
### gs_cdj550 - HP DeskJet 600
### gs_cdj550 - HP DeskJet 660C 
### gs_cdj550 - HP DeskJet 660C 
### gs_cdj550 - HP DeskJet 682C
### gs_cdj550 - HP DeskJet 683C
### gs_cdj550 - HP DeskJet 693C 
### gs_cdj550 - HP DeskJet 694C 
### gs_cdj550 - HP DeskJet 690C 
### gs_cdj550 - HP DeskJet 692C 
### gs_cdj550 - HP DeskJet 693C 
### gs_cdj550 - HP DeskJet 694C 
### gs_cdj550 - HP DeskJet 695C 
### gs_cdj550 - HP DeskJet 850 
### gs_cdj550 - HP DeskJet 870Cse 
### gs_cdj550 - HP DeskJet 895Cxi
### gs_cdj550 - HP DeskJet 970 
### gs_cdj550 - HP OfficeJet 590 
### gs_cdj550 - Olivetti jp450 
### gs_cdj550 - Xerox XJ6C 
### gs_cdj850 - HP DeskJet 850 
### gs_cdj850 - HP DeskJet 855 
### gs_cdj850 - HP DeskJet 870Cse 
### gs_cdj850 - HP DeskJet 870Cxi 
### gs_cdj850 - HP DeskJet 890C 
### gs_cdj850 - HP DeskJet 670C 
### gs_cdj850 - HP DeskJet 680 
### gs_cdeskjet - HP DeskJet 500C
### gs_cdeskjet - GhostScript with -sDEVICE=cdj500 -dBitsPerPixel=3 
### gs_cdjcolor - GhostScript with -sDEVICE=cdj500 -dBitsPerPixel=24 
### gs_cdjmono - HP DeskJet 500C 
### gs_cdjmono - HP DeskJet 510 
### gs_cdjmono - HP DeskJet 520 
### gs_cdjmono - HP DeskJet 540C 
### gs_cdjmono - HP DeskJet 693C 
### gs_cdjmono - GhostScript with -sDEVICE=cdj500 -dBitsPerPixel=1 
### gs_epsonc - Fujitsu DL-1100 
### gs_epsonc - Fujitsu DL-2400 
### gs_hl7x0 - Brother HL-720 
### gs_hl7x0 - Brother HL-730 
### gs_hl7x0 - Do not use hl7x0 with PCL compliant Brother HL-760. Use ljet4. 
### gs_laserjet - Bull Compuprint Pagemaster 415 
### gs_lips3 - Canon LBP4+
### gs_lj4dith - HP DeskJet 600 
### gs_ljet2 - HP LaserJet II 
### gs_ljet2 - Xerox 4030 
### gs_ljet3 - Tandy LP800 With LaserJet III emulation. 
### gs_ljet4 - Brother HL-660 
### gs_ljet4 - Brother HL-760 600dpi 
### gs_ljet4 - Epson EPL5700 300dpi OK
### gs_ljet4 - HP DeskJet 600 margins wrong 
### gs_ljet4 - HP DeskJet 870Cse 
### gs_ljet4 - HP LaserJet 5 300dpi or 600dpi 
### gs_ljet4 - HP LaserJet 5L 300dpi or 600dpi
### gs_ljet4 - HP LaserJet 6L 600dpi
### gs_ljet4 - HP LaserJet 1100 600dpi OK. 
### gs_ljet4 - IBM Network Printer 17 
### gs_ljet4 - IBM/Lexmark 4029 Margins wrong. 
### gs_ljet4 - Lexmark Optra E+ 
### gs_ljet4 - Lexmark Optra SC 1275 B/W only. 
### gs_ljet4 - Oki OL410ex LED printer 300dpi or 600dpi 
### gs_ljetplus - HP LaserJet Plus 
### gs_ljetplus - Canon Laser LBP-600 
### gs_ljetplus - NEC SuperScript 860 
### gs_pjxl300 - HP PaintJet XL300 
### gs_pjxl300 - HP DeskJet 600
### gs_pjxl300 - HP DeskJet 1200C 
### gs_pjxl300 - HP DeskJet 1600C
### gs_r4081 - Ricoh 4081 laser printer 
### gs_r4081 - Ricoh 6000 laser printer 
### gs_uniprint - Canon BJC 610 
### gs_uniprint - HP DeskJet 550C 
### gs_uniprint - NEC P2X 
### gs_uniprint - Epson Stylus Color 
### gs_uniprint - Epson Stylus Color II 
### gs_uniprint - Epson Stylus Color 500 
### gs_uniprint - Epson Stylus Color 600 
### gs_uniprint - Epson Stylus Color 800 
### gs_uniprint - Epson Stylus Color 1520 
### gs_uniprint - SUN rasterfile 
### gs_uniprint - Canon BJC-210 Color
### gs_uniprint - Epson Stylus Color 640
### gs_uniprint - Epson Stylus Color 740
### bjc610a0.upp - Canon BJC 610 (color, rendered) 360×360dpi plain paper, high speed
### bjc610a1.upp - Canon BJC 610 (color, rendered) 360×360dpi plain paper
### bjc610a2.upp - Canon BJC 610 (color, rendered) 360×360dpi coated paper
### bjc610a3.upp - Canon BJC 610 (color, rendered) 360×360dpi transparency film
### bjc610a4.upp - Canon BJC 610 (color, rendered) 360×360dpi back print film
### bjc610a5.upp - Canon BJC 610 (color, rendered) 360×360dpi fabric sheet
### bjc610a6.upp - Canon BJC 610 (color, rendered) 360×360dpi glossy paper
### bjc610a7.upp - Canon BJC 610 (color, rendered) 360×360dpi high gloss film
### bjc610a8.upp - Canon BJC 610 (color, rendered) 360×360dpi high resolution paper
### bjc610b1.upp - Canon BJC 610 (color, rendered) 720×720dpi plain paper
### bjc610b2.upp - Canon BJC 610 (color, rendered) 720×720dpi coated paper
### bjc610b3.upp - Canon BJC 610 (color, rendered) 720×720dpi transparency film
### bjc610b4.upp - Canon BJC 610 (color, rendered) 720×720dpi back print film
### bjc610b6.upp - Canon BJC 610 (color, rendered) 720×720dpi glossy paper
### bjc610b7.upp - Canon BJC 610 (color, rendered) 720×720dpi high-gloss paper
### bjc610b8.upp - Canon BJC 610 (color, rendered) 720×720dpi high resolution paper
### cdj550.upp - HP DeskJet 550C 300×300dpi 32-bit CMYK
### necp2x.upp - NEC P2X 360×360dpi 8-bit (Floyd-Steinberg)
### stcany.upp - Any Epson Stylus Color 360×360dpi 4-bit, PostScript halftoning
### stc.upp - Original Epson Stylus and Stylus Pro Color 360×360dpi 32-bit CMYK, 15-pin 
### stc_l.upp - Original Epson Stylus and Stylus Pro Color 360×360dpi 4-bit, PostScript halftoning, weaved noWeave
### stc_h.upp - Original Epson Stylus and Stylus Pro Color 720×720dpi 32-bit CMYK, 15-pin Weave
### stc2.upp - Original Epson Stylus and Stylus Pro Color 360×360dpi 32-bit CMYK, 20-pin, Epson Stylus Color II(s)
### stc2_h.upp - Original Epson Stylus and Stylus Pro Color 720×720dpi 32-bit CMYK, 20-pin, Epson Stylus Color II 
### stc2s_h.upp - Original Epson Stylus and Stylus Pro Color 720×720dpi 32-bit CMYK, 20-pin, Epson Stylus Color IIs
### stc500p.upp - 360×360dpi Epson Stylus Color 500 32-bit CMYK, noWeave, plain paper
### stc500ph.upp - 720×720dpi Epson Stylus Color 500 32-bit CMYK, noWeave, plain paper
### stc600pl.upp - 360×360dpi Epson Stylus Color 600, 32/90-inch weaving 32-bit CMYK, 32-pin, plain paper
### stc600p.upp - 720×720dpi Epson Stylus Color 600, 32/90-inch weaving 32-bit CMYK, 32-pin, plain paper
### stc600ih.upp - 1440×720dpi Epson Stylus Color 600, 32/90-inch weaving 32-bit CMYK, 30-pin, inkjet paper
### stc800pl.upp - Epson Stylus Color 800, 64/180-inch weaving 360×360dpi 32-bit CMYK, 64-pin, plain paper
### stc800p.upp - Epson Stylus Color 800, 64/180-inch weaving 720×720dpi 32-bit CMYK, 64-pin, plain paper   
### stc800ih.upp - Epson Stylus Color 800, 64/180-inch weaving 1440×720dpi 32-bit CMYK, 62-pin, inkjet paper
### stc1520h.upp - Epson Stylus Color 800, 64/180-inch weaving 1440×720dpi 32-bit CMYK, 62-pin, inkjet paper
###   SUPPORTED END

### From Section 3 of the IFHP-HOWTO Document:
###
###   3. Recommended -Z options for Users
###   
###   Due to the general nature of the ifhp filter, there is no standard
###   set of -Z user options because there is no standard set of user
###   facilities. However, the following are recommended for use by
###   implementors of new configurations or printer support.
###   
###   3.1 Input Tray Selection
###   
###   If a printer supports an input tray selection mechanism, then the
###   following options are recommended for use. Local conditions or
###   printer type may require addition options.
###   
###   inupper, inlower, intray1, intray2, ..., manual, envelope
###   
###          The input tray selection options should start with the in
###          prefix and correspond to the various trays, if possible.
###          The manual and envelope options are included to select manual
###          feed or envelope feed. There is a possible source of conflict
###          here as there may be an envelope feeder as well as an envelope
###          media. This is a printer specific dependency.
###   
###   source=name
###   
###          The key=value entry allows users to use options such as
###          -Zsource=inbin1, which may be useful for systems that have
###          an unusual or nonstandard input selection mechanism. The
###          two
###   
###   3.2 Output Bin Selection
###   
###   If a printer has an output bin selection mechanism or some other
###   finishing mechanism, then the following are recommended for use.
###   
###   outupper, outlower, outbin1, ...
###   
###          The output bin selection should start with the out prefix.
###   
###   outbin=name
###   
###          The outbin=name form allow users to use options such as
###          -Zoutbin=stapler, which may be useful for systems that have
###          an unusual or nonstandard output selection mechanism.
###   
###   3.3 Media Size (Paper) Selection
###   
###   The paper size selection facilities usually are quite printer
###   dependent, and the input tray selection and paper size selection
###   mechanisms may interact in strange and mysterious ways.
###   
###   letter, legal, ledger, oversize, a0, a1, ...
###   
###          These are standard paper size names.
###   
###   11x17, tabloid
###   
###          These are usually aliases for ledger, but depending on local
###          conditions can select different types of paper.
###   
###   paper=name
###   
###          The paper=name form allow users to use options such as
###          -Zpaper=b3, which may be useful for systems that have an
###          unusual or nonstandard input media selection mechanism.
###   
###   3.4 Media Type Selection
###   
###   Media Type is not the same as paper size, and corresponds to the
###   name assigned to a particular media. Of course, the issue is
###   complicated by the fact that some media have standard sizes as
###   well. Again, the input tray selection, media size, and media type
###   selection will interact in confusing and mysterious ways, depending
###   on the whim of the printer firmware iplementors.
###   
###   You will notice that there is no generic mediatype=name facility.
###   This is due to the radically different way that PostScript,
###   PJL, PCL, etc., each handle media name and selection.  While
###   it is possible to determine the various strings, numbers, escape
###   codes, etc., that need to be sent for each mediatype,  a general
###   mechanism is too fragile and fraught with peril for the unwary
###   administrator to provide.  You have been warned.  Been there and
###   have the scars to prove it.
###   
###   plain, preprinted, letterhead, transparency, glossy, prepunched,
###   labels
###   
###          These are commonly used media type names gleaned from various
###          PostScript Printer Description Files, Microsoft printer
###          drivers, and arcane lore of the Printer Working Group. Note
###          that these are not accepted terms in the paper industry for
###          any of these type of media. You are warned.
###   
###   3.5 Duplex and Simplex
###   
###   Duplex printing is when impressions are placed on both sides of a
###   sheet of media. Due to a general lack of conventions, the orientation
###   of each of the impressions varies from vendor to vendor, and has
###   changed over the years.
###   
###   duplex, lduplex
###   
###          Print on both sides using the default orientation. The
###          lduplex is an alias for duplex.
###   
###   duplexshort, sduplex
###   
###          Print on both sides but reverse the orientation of one page.
###          The sduplex is an alias for duplex Which page is reversed
###          it at the whim of the firmware implementors and conventions
###          for the printer.
###   simplex
###   
###          Print on a single side of a page.
###   
###   tumble, shortedge
###   
###          This is use to print a single page on one side of the media,
###          but using the (nonstandard) orientation for the duplexshort.
###          This is usually done when a single impression must be
###          generated on the alternative side of the media, rather than
###          the default side. Again, this is dependent on the whims and
###          whimsys of the printer firmware implementors, and may have
###          some unexpected side effects.
###   
###   3.6 Copies
###   
###   This option has been provided to effectively allow the printer to
###   make multiple copies of a single page or job. This option tends to
###   be misimplemented on almost all known printers, and it is strongly
###   recommended that users do not use it. However, for completeness,
###   compatibility, and implementor consideration, this is included,
###   even against the better judgement of the implementors of the ifhp
###   software.
###   
###   copies=nnn
###   
###          Attempt to make nnn copies of each impression. This usually
###          fails with catastrophic problems unless you have a system
###          that supports all of the various options required, has enough
###          memory to handle rasterization, you do not have a paper
###          outage, and the printer does not stop with operator
###          intervention. You have been warned.
###   
###   

#########
#########   Default Printer Entry
#########    This describes the various supported options that are
#########   to be used in the ifhp.conf file.  There are others but
#########   these are reserved strictly for command line use.
#########

#  
# PRINTER default - HP 4M Plus, PostScript, PJL, PCL, status, pagecount support

## Status file limits in K bytes
##
statusfile_max=8
statusfile_min=2

#--- START language setup
## default is to turn everything on
## We assume that we have PostScript, PJL, PCL, and text support
## Text is just PCL without any control sequences
##

pjl
pcl
ps
text

## if you have a text file do LF to CRLF translation.
## This is dangerous and should not be used unless you are
## absolutely desperate AND have read the warnings in the
## source code.
# crlf

## These are for very ugly printers that have some strange problems
##  with PCL and PS end of job at the start of jobs.  If it is present,
##  the PJL settings are ignored,  or the rest of the job may be
##  ignored.
##
## PCL EOJ at start of job when PCL supported.
## If you set pcl_eoj@ you do NOT put an EOJ at start
## of job.  This violates the recommendations of the PCL
## Reference Manual.
## pcl_eoj_at_start   - (default), EOJ at start of job
## pcl_eoj_at_start@  - no EOJ

pcl_eoj_at_start

## PS EOJ is usually put at start of PS when PS is being printed.
## You may not want this.
## ps_eoj_at_start
## ps_eoj_at_start   - (default), EOJ at start of job
## ps_eoj@  - no EOJ

ps_eoj_at_start

## Some printers get very upset when PostScript jobs contain ^T or ^C
## characters.  You can remove various control character by setting
## their values in this string:
##  remove_ctrl=TC   will remove CTRL-T and CTRLC characters
##  This is only done for PostScript jobs.  You will usually find
## this when a job was generated on a system where it expects to
## communicate dynamically with a monitoring system,  and is being
## printed on another printer or system.
##
# remove_ctrl=TC
# 

## Some printers insist on using the Tagged Binary Commmunication Protocol
## to support sending embedded PS file.  If you need to use TBCP, enable this.
## This flag is inherently evil,  and is for desperate uses only,
## and should not be generally enabled. 
##
## If you don't know what this is about,  don't mess with it.
## As they say, You have been warned.  Read the code, read the
## TBCP documentation, and get ready to experiment with this
## before blindly enabling it.
##
# tbcp

#--- END lanuage setup


#--- START accounting extra information
## For those little moments of quiet desperation when you need to have the
## actual printing filter do some accounting.  Why?  because you may need to
## check with some specialized database,  update the information in it.
##
## Again,  this is inherently evil,  and is for desperate sysadmins who are
## trying to placate the bean counters in administration...
## If you don't know what this is about,  don't mess with it.
## You, as they say,  have been warned.  Read the IFHP-HOWTO for
## more details.

## accounting script
# accounting=accounting.sh
#--- END accounting extra information

#--- START printer status, sync, and pagecount

## 
## status
## 
## If you have a bi-directional channel to your printer,  it may or
## may not provide status information.  See the IFHP-HOWTO for details
## about this.
##  
## status  - printer has bidirectional communications,  and will provide
##   status information that MUST be read.  The ifhp filter will do
##   non-blocking reads and writes to the printer.
##
## status@ - the ifhp filter will NOT attempt to read from the
##   printer and will do only (blocking) writes.
## 
##  Setting status@ can have
##  unexpected side effects if your printer sends status back on a
##  TCP/IP connectio.  If it is not read,  the printer's output buffer
##  may becomes full and the printer will lock up.
##
##  If your printer has a bidirectional connection (network connection)
##  but does not provide status or interactive information,
##  use sync@ and pagecount@ to prevent the ifhp filter from interrogating
##  the printer.
##

status

##
## sync
##
## If you have a bidirectional communication port and your printer supports
## PJL ECHO, PJL JOB, or PostScript,  then you can send a small job to the
## printer that will effectively check on its health and clear out any problems
## it may have had from the last job.  This operation is called 'sync' because
## when it completes you have synchronized communication with the printer
## and are getting the current status information
##
## If you are not worried about this,  you can turn 'sync' off - sync@
##
## sync@     - no sync operations
## sync      - Use PJL JOB, PJL ECHO, or PostScript, depending on
##             what is supported by the printer.
## sync=ps   - use PostScript
## sync=pjl  - use PJL method
##

sync

## try sending sync requests at these intervals
#
sync_interval=20

##
## pagecount
##
## If your printer suppors a hardware page counter,  then this operation
## gets the value of the pagecounter both before and after the job has been
## printed.  This information is written to the accounting log file.
##

##
## pagecount@     - no pagecount
## pagecount      - if pjl availble us it, then if ps available use it
##             this is best method to sync
## pagecount=ps   - use ps method
## pagecount=pjl  - use pjl method
pagecount
##  If your printer does not have a reliable way to determine that
## the last job has finished,  you can 'poll' it at intervals.
## The page count will be sampled at 'pagecount_poll' intervals
## until it is stable.
##  This is for desperation only
#pagecount_poll=5

##  You may need to periodically resend the pagecount command
## if you do not get a response.  This will do so.  You may have problems
## with jobs that take a very long time to process and which do not have
## reliable 'end of job' indications.

pagecount_interval=20

##  We will send a 'sync' query at then end of job to determine if a job has
##  finished.  However, if you do not want to do this, then set
##  waitend@ . Suppressing waitend is DANGEROUS if you expect to
##  get error status back.  You can also set waitend=ps to force
##  using a small PostScript job to be run to indicate that the processing
##  of the job has been completed.  Unfortunately,  this will only tell
##  about the print engine.  You will also have to use end_ctrl_t to force
##  the printing status to be delivered
waitend

##  When you use waitend=ps (or have a PostScript only printer),  you can
##  send a ^T (control T) to ask the printer for status.  This will cause
##  the actual printer status to be returned.  If it is one of the listed
##  values,  then it indicates that the last page has been printed.
##  This value can be a comma or colon separated list of (lowercase)
##  values,  and is searched using the 'strstr()' function for a match.
##  You can also use the !value to indicate that when this value does NOT
##  occur as a status,  then you have a done condition.  For example,
##  !printing will accept any status BUT printing as a done condition.
end_ctrl_t=busy:idle

##  If you are getting status using postscrip

## interval to send queries - this can be pretty long as many times
##  you will need to wait until the job finishes.  You do not want to
##  send too many of these
##
waitend_interval=300

## interval between PostScript CTRL_T queries after you have gotten
## a response from the printer that it is finished with the previous
## job.  Used only if end_ctrl_t has a non-null value,  and after a
## small PostScript job has been processed that sends back an echo
## response.  You may find that these CTRL_T's may get ignored if
## the PostScript engine is busy,  so do not send too fast
waitend_ctrl_t_interval=3

## how often to report progress - minimum of percent or
##  amount written (in Kbytes)
##  report when you have done this much more percent of the job
progress_pc=25
##  report when you have done this much more Kbytes of job
progress_k=1000

#--- END printer status, sync, and pagecount

## START PJL configuration

## only allow these PJL commands
##
pjl_only=[
    COMMENT DEFAULT DINQUIRE ECHO ENTER EOJ
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD FSINIT FSMKDIR
    INFO INITIALIZE INQUIRE JOB OPMSG PJL RDYMSG
    RESET SET STMSG USTATUS USTATUSOFF
## special builtins that expand variables correctly
    COPIES
  ]

## do NOT allow these PJL commands, even if they are in pjl_only
pjl_except=[ ]

## BUILTIN PJL Support
##  pjl_enter - printer supports language selection
pjl_enter
##  pjl_job -   printer supports PJL JOB 
pjl_job
##  pjl_console -   printer supports PJL console setting 
pjl_console
## Set ready_msg to a string that gets expanded to the
## values you want - \%s{n} is user name
pjl_ready_msg = \%s{n} \%s{J}:\%s{P}
e# maximum number of characters on the console display for messages
pjl_display_size= 20

## expand the following on startup,  after the builtin
pjl_init=[ ustatus teoj ]

## expand the following on termination,  after the builtin
pjl_term=[ ustatus teoj ]

## You can, if you are feeling very odd, force a file
##  to be send as part of the PJL setup
##  1. add setup to pjl_user_opts if you want user specified files
##    specify this with -Tsetup=filename
##  2. put setup=filename in pjl_init=[ ... ] list
##    if you want it permanently set up
##  The setup will get expanded to font_download=filename
##    and the actual file will come from ${pjl_fontdir}/filename
##  This keeps users from downloading /etc/passwd to your printer 

pjl_fontdir=/usr/lib/lpfilters/fonts/pjl
pjl_setup=[ font_download=\%s{setup} ]
## default value for testing or insurance
setup=test

##   PJL USTATUS command string
##    This usually will force job status to be sent at 10
##   second intervals,  which is pretty useful for a keepalive
pjl_ustatus=
    @PJL USTATUSOFF
    @PJL USTATUS JOB = ON
    @PJL USTATUS DEVICE = ON
    @PJL USTATUS PAGE = ON
    @PJL USTATUS TIMED = 10

##   If your printer has 'True End of Job'  then this is useful.
##  The TEOJ is an undocumented option for PJL that forces JOB
##  status to be delayed until the job has been totally printed.
##  Sometimes it works,  usually does not
##
pjl_teoj= @PJL TEOJ = ON


## PJL Variables supposedly supported by HP and others
##  Your milage may vary.  More may be added as time goes on
##  Note:  the pjl_vars_set += [ ... ] format may soon
##  allow additional values to be added

pjl_vars_set= [
    AUTOCONF AUTOSELECT BINDING=LONGEDGE BITSPERPIXEL CLEARABLEWARNINGS
    CONTEXTSWITCH COPIES COURIER=REGULAR CPCLOCK DENSITY DISKLOCK
    DUPLEX ECONOMODE FINISH FORMLINES=60 HOLD HOLDTYPE
    IMAGEADAPT INTRAY1 INTRAY2 
    INTRAY1SIZE INTRAY2SIZE INTRAY3SIZE INTRAY4SIZE
    INTRAY5SIZE INTRAY6SIZE INTRAY7SIZE INTRAY8SIZE
    IOBUFFER IOSIZE JOBATTR JOBOFFSET
    LANG=ENGLISH LOWTONER MANUALFEED
    MEDIASOURCE MEDIATYPE MPTRAY ORIENTATION=PORTRAIT OUTBIN=UPPER
    OUTLINEPOINTSIZE PAGEPROTECT
    PAPER=LETTER PARALLEL PERSONALITY=AUTO POWERSAVE POWERSAVETIME=30
    PRINTQUALITY=NORMAL QTY=1 RENDERMODE REPRINT=AUTO RESOLUTION
    RESOURCESAVE RESOURCESIZE RET TIMEOUT=600 WIDEA4 TUMBLE
	PAPERLENGTH PAPERWIDTH
  ]

##
## PJL Options in -Z opts
##

pjl_user_opts=[
    duplex lduplex duplexshort envelope executive inlower inupper
    manual mediasource mediatype outlower outupper sduplex simplex shortedge
    transparency tumble copies resolution 300 600 1200 300dpi 600dpi 1200dpi
    tabloid 11x17
## - these are SET variables, you set the values
    autoselect economode manualfeed mediasource mediatype
	orientation paper outbin rendermode resolution tumble
## - these are for general purpose
	source
]

## Your milage may vary on these,  but supposedly most PJL aware
## printers will either support or ignore them
##
pjl_source=@PJL SET MEDIASOURCE = \%s{source}
#pjl_outbin=[ \%s{outbin} ]
# pjl_paper=[ \%s{paper} ]
# pjl_papersize=[ \%s{papersize} ]
# pjl_pagesize=[ \%s{pagesize} ]

# - these are pretty standard - DEFAULTS
pjl_duplex=@PJL SET DUPLEX = ON
pjl_duplexshort=
  @PJL SET DUPLEX = ON
  @PJL SET TUMBLE = ON
pjl_lduplex=[ duplex ]
pjl_sduplex=[ duplexshort ]
pjl_simplex=
  @PJL SET DUPLEX = OFF
pjl_tumble=@PJL SET TUMBLE = ON
pjl_shortedge=[ tumble ]

pjl_inupper=@PJL SET MEDIASOURCE = TRAY1
pjl_inlower=@PJL SET MEDIASOURCE = TRAY2
pjl_outupper=@PJL SET OUTBIN = UPPER
pjl_outlower=@PJL SET OUTBIN = LOWER
pjl_tray1=@PJL SET MEDIASOURCE = TRAY3
pjl_tray2=@PJL SET MEDIASOURCE = TRAY0
pjl_tray3=@PJL SET MEDIASOURCE = TRAY1

pjl_landscape=@PJL SET ORIENTATION = LANDSCAPE
pjl_portrait=@PJL SET ORIENTATION = PORTRAIT

pjl_letter=@PJL SET PAPER = LETTER
pjl_legal=@PJL SET PAPER = LEGAL
pjl_ledger=@PJL SET PAPER = LEDGER
pjl_11x17=[ ledger ]
pjl_tabloid=[ ledger ]
pjl_executive=@PJL SET PAPER = EXECUTIVE
pjl_a0=@PJL SET PAPER = A0
pjl_a1=@PJL SET PAPER = A1
pjl_a2=@PJL SET PAPER = A2
pjl_a3=@PJL SET PAPER = A3
pjl_a4=@PJL SET PAPER = A4
pjl_b5=@PJL SET PAPER = B5
pjl_envb5=@PJL SET PAPER = EnvISOB5
pjl_env10=@PJL SET PAPER = Env10
pjl_envc5=@PJL SET PAPER = EnvC5
pjl_envmonarch=@PJL SET PAPER = EnvMonarch

pjl_transparency=@PJL SET MEDIATYPE = TRANSPARENCY
pjl_plain=@PJL SET MEDIATYPE = PLAIN
pjl_preprinted=@PJL SET MEDIATYPE = PREPRINTED
pjl_letterhead=@PJL SET MEDIATYPE = LETTERHEAD
pjl_glossy=@PJL SET MEDIATYPE = GLOSS
pjl_prepunched=@PJL SET MEDIATYPE = PREPUNCHED
pjl_labels=@PJL SET MEDIATYPE = LABELS
pjl_bond=@PJL SET MEDIATYPE = BOND
pjl_recycle=@PJL SET MEDIATYPE = RECYCLE
pjl_heavy=@PJL SET MEDIATYPE = HEAVY
pjl_cardstock=@PJL SET MEDIATYPE = CARDSTOCK
pjl_color=@PJL SET MEDIATYPE = COLOR
pjl_manual=@PJL SET MANUALFEED = ON

pjl_300=@PJL SET RESOLUTION = 300
pjl_300dpi=[ 300 ]
pjl_600=@PJL SET RESOLUTION = 600
pjl_600dpi=[ 600 ]
pjl_1200=@PJL SET RESOLUTION = 1200
pjl_1200dpi=[ 1200 ]

## PJL USTATUS information will include a lot of
## codes that are just not interesting,  such as 'printer on line',
## or 'power up'.  You can suppress reporting status for these codes
## by putting their code numbers in this list

pjl_quiet_codes=[
    10001
    10023
    10030
    40000
  ]

## Special error messages
##  One per line
##  The idea is that you may get an error code,  but you
## it is not 'standard'.  You can add additional codes here
## or override the default strings in the ifhp source.
## 
pjl_error_codes=[
    10006=Toner Low 
  ]

## Inform operator if this error number occurs
pjl_alert_codes=[
  15* 40* 41* 42* 44*
  ]

# use this program to write error to operator
# error will be read from STDIN.  You can play games with
# mail or whatever you want here.
#
pjl_alert_handler=


#--- END of PJL

#--- START of PostScript

## PostScript Information
##    WARNING - YOUR POSTSCRIPT PRINTER MAY NOT ACCEPT
##  SOME OF THE COMMANDS HERE.  Check the printer PostScript Printer
##  Description File for details.

## use the following string to cause the printer to echo
## ifhp will replace NAME by a unique identifier to make sure
## that the latest echo was detected

ps_status_code=
    %!PS-Adobe-2.0
## for PS Level 3 add:
#   false 0 startjob pop
    ( %%[ echo: NAME ]%% ) print () = flush

##  PageCount
##   This is a very nasty piece of PostScript that will
##  get the current pagecount value out of the statusdict
##  Note: you really should use the PS Level 3 if you have it
##  Note: some printers INSIST on ignoring the startjob stuff,
##    and will report the current pagecount.  You sometimes need
##    to sit in a loop and wait until it stops changing.
##    See pagecount_interval

ps_pagecount_code=
    %!PS-Adobe-2.0
## for PS Level 3 add:
#   false 0 startjob pop
    /p{print}def ( %%[ pagecount: ) p
    statusdict begin pagecount end 20 string cvs p
    ( ]%% ) p () = flush

## PostScript options in -Z
##  defaults - for HP Laserjet4Mplus
## support for font download
##  use:  -Tfont=name1,font=name2
##  This will get expanded to fontdownload 
##  and fontdownload will get the ${font} value set by font=
##  the ps_fontdir value will be prefixed,  and
##   ${ps_fontdir}/name1  and ${ps_fontdir}/name2 will be downloaded
##  to the printer
##   
ps_fontdir=/usr/lib/lpfilters/fonts/ps
ps_font=[ font_download ]


## Support for PostScript based page settings 
## YOU NEED TO CHECK YOUR PPD FILE FOR THIS STUFF
##
## You can also use tray=xx, source=xx, paper=xx, papersize=xx, pagesize=xx
## These are also passed as the PJL values so you can make them work
## with PostScript or PJL
ps_source=[ \%s{source} ]
ps_outbin=[ \%s{outbin} ]
ps_paper=[ \%s{paper} ]
ps_papersize=[ \%s{papersize} ]
ps_pagesize=[ \%s{pagesize} ]

##

ps_duplex=   statusdict begin true setduplexmode false settumble end
ps_lduplex=[ duplex ]
ps_duplexshort=  statusdict begin true setduplexmode true settumble end
ps_sduplex=[ duplexshort ]
ps_simplex=  statusdict begin false setduplexmode end
ps_inupper=  statusdict begin 0 setpapertray end
ps_inlower=  statusdict begin 1 setpapertray end
ps_manual=   statusdict begin /manualfeed true store end
ps_envelope= statusdict begin com10envelopetray end
ps_outupper= statusdict begin 0 setoutputtray end
ps_outlower= statusdict begin 1 setoutputtray end
ps_transparency= <</MediaType (Transparency)>> setpagedevice
ps_tumble=  statusdict begin true settumble end
ps_shortedge=[ tumble ]

# paper size selection
ps_a0=
ps_a1=
ps_a2=
ps_a3=
ps_a4=
ps_letter=
ps_ledger=
ps_11x17=[ ledger ]
ps_tabloid=[ ledger ]
ps_executive=
ps_oversize=

mediaselect=3
ps_mediaselect=<</DeferredMediaSelection true /MediaPosition \%d{mediaselect}>> setpagedevice

ps_user_opts=[
	11x17 a0 a1 a2 a3 a4 a5 duplex duplexshort envelope executive
	font inlower inupper lduplex ledger legal letter manual mediaselect
	outlower outupper oversize sduplex simplex tabloid transparency

	# we use this for fonts
	font
  ]

#--- END PostScript

#--- START PCL


## PCL options in -Z

pcl_user_opts=[
    a3 a4 a5 autoselect bold clearmargins courier crlf delete_fonts duplex
    duplexback duplexfront duplexselect duplexshort envelope fixed
    font font_id font_op font_primary height helvetica hmi inhighcapacity
    init inlower inright inupper italic jobseparation landscape ledger lduplex
    leftmargin leftoffset legal letter lineprinter linesperpage linewrap
    lpi manual normalpage orientation outlower outupper pagesize
    pc8 pitch portrait proportional rightmargin sduplex simplex source
    style symbol_set topmargin topoffset typeface user_opts vmi weight
  ]

## turn LF into CRLF
pcl_crlf=\033&k2G
## turn line wrap on
pcl_linewrap=\033&s0C

## page (job) size
##  use -Zpagesize=n
## 1 - executive, 2 - letter, 3 - legal, 6 - ledger, 25 - A5, 26 - A4, 27 - A3
## 80 - Monarch Envelope, 81 - Comm. 10 Envelope, 90 - Intl. DL Envelope
## 91 - Intl. C5 Envelope, 100 - Intl. D5 Envelope, 101 - Custom
## 71 - Hagaki Postcard, 72 - Oufuku-Hagaki Postcard
pagesize=2
pcl_pagesize=\033&l\%d{pagesize}A
pcl_letter=\033&l2A
pcl_legal=\033&l3A
pcl_ledger=\033&l6A
pcl_a5=\033&l25A
pcl_a4=\033&l26A
pcl_a3=\033&l27A

## paper source selection
##   use -Zsource=n
## 0 - current, 1 - upper, 2 - manual paper, 3 - manual envelope
## 4 - lower,   5 - optional paper, high capacity
## 6 - optional manual or envelope feeder, 7 - autoselect, 8 right side
## 20-39 high capacity input trays 2-21

source=0
pcl_source=\033&l\%d{source}H
pcl_inupper=\033&l1H
pcl_manual=\033&l2H
pcl_inlower=\033&l4H
pcl_inhighcapacity=\033&l5H
pcl_autoselect=\033&l7H
pcl_inright=\033&l8H

## orientation
##  0 - portrait, 1, landscape, 2 - reverse portrait, 3 reverse landscape
pcl_orientation=\033&l\%d{orientation}O
pcl_portrait=\033&l0O
pcl_landscape=\033&l1O

## simplex or duplex
##  0 - simplex,  1 - duplex long edge, 2 - duplex short edge
pcl_simplex=\033&l0S
pcl_duplex=\033&l1S
pcl_lduplex=[ duplex ]
pcl_duplexshort=\033&l2S
pcl_sduplex=[ duplexshort ]

## offsets
##  these are specified in 1/720 inch units
##  i.e. - if you want 1/2 inch, you need  720 x .5 = 360 units
leftoffset=0
pcl_leftoffset=\033&l\%d{leftoffset}U
topoffset=0
pcl_topoffset=\033&l\%d{topoffset}Z

## duplex page side selection
duplex_select=1
pcl_duplexselect=\033&a\%d{duplexselect}G
pcl_duplexfront=\033&a1G
pcl_duplexback=\033&a2G

## job separaton
pcl_jobseparation=\033&l1T

## output bin 
## 0 - auto, 1 - bin 1,top/facedown 2 - bin 2,left/faceup
## 3 - bin 3 (HCO faceup)
## 4 - bin 4 (HCO 1, facedown)
## 5 - bin 5 (HCO 2, facedown)
## 6 - bin 6 (HCO 3, facedown)
## 7 - bin 7 (HCO 4, facedown)
## 8 - bin 8 (HCO 5, facedown)
## 9 - bin 9 (HCO 6, facedown)
## 10 - bin 10 (HCO 7, facedown)
## 11 - bin 11 (HCO 8, facedown)

outbin=1
pcl_outbin=\033&l\%d{outbin}G
pcl_outupper=\033&l1G
pcl_outlower=\033&l2G

## margins
pcl_clearmargins=\0339
leftmargin=0
pcl_leftmargin=\033&a\%d{leftmargin}L
rightmargin=80
pcl_rightmargin=\033&a\%d{rightmargin}M
topmargin=0
pcl_topmargin=\033&l\%d{topmargin}E
linesperpage=66
pcl_linesperpage=\033&l\%d{linesperpage}F

## the HMI (Horizontal Motion Index)
##  this is dangerous...
##  This is the number of 1/120 inch unit per character
##  i.e. - 120 unit per inch
##  If you want 10 cpi, you want HMI = 120/10 = 12
hmi=12
pcl_hmi=\033&k\%d{hmi}H

## the VMI (Vertical Motion Index)
##  this is dangerous...
##  This is the number of 1/48 inch unit per line
##  i.e. - 48 unit per inch
##  If you want 6 lines per inch, you want HMI = 48/6 = 8
vmi=8
pcl_vmi=\033&l\%d{vmi}C

## the LPI (Lines Per Inch) - inverse of VMI
##  This is the lines per line
##  If you want 6 lines per inch, you want LPI = 6
lpi=6
pcl_lpi=\033&l\%d{lpi}D

## symbol set
##  - don't fool around with this one...
## 10U = PC 8 - shows the funny PC characters???
##
symbol_set=8U
pcl_symbol_set=\033(\%s{symbol_set}
pcl_pc8=\033(10U

## spacing
##  0 - fixed, 1 - proportional
pcl_fixed=\033(s0P
pcl_proportional=\033(s1P

## pitch for fixed spaced font
##  in characters per inch
pitch=10
pcl_pitch=\033(s\%3.2f{pitch}H

## height for proportional spaced font
##  in points
height=10
pcl_height=\033(s\%3.2f{height}V

## style for proportional spaced font
##  0 - normal, 1 - italic, 4 condensed, etc
style=0
pcl_style=\033(s\%d{style}S
pcl_italic=\033(s1S


## weight -
##  ranging from -7 (ultra thin) to 7 (ultra black)
weight=0
pcl_weight=\033(s\%d{weight}B
pcl_bold=\033(s3B

## Typeface Family
## See Appendic C in the PCL 5 comparison guide
##   consists of foundary * 4096 + fontid
##   foundary = 1 - AGFA, 2- Bitstream, etc 
##   fontid   = 0 - line printer, 3 = courier, 4 = helvetica
##   id 4099 - Courier
##      4100 - Helvetica
##
typeface=4099
pcl_typeface=\033(s\%d{typeface}T
pcl_courier=\033(s4099T
pcl_helvetica=\033(s4100T
pcl_lineprinter=\033(s0T


##
## Fonts and Font Downloading
##  fontid is used to set the current font
font_id=1
pcl_font_id=\033*c\%d{font_id}D
## set primary font
font_primary=1
pcl_font_primary=\033(\%d{font_primary}X

## font control
##
font_op=0
pcl_font_op=\033*c\%d{font_op}F
pcl_delete_fonts=\033*c0F

## font directory
font=c1201b.10
pcl_fontdir=/usr/lib/lpfilters/fonts/pcl

## combination command
pcl_font=[ delete_fonts font_id font_download font_primary ]

## canned setup
pcl_normalpage=[ letter crlf linewrap portrait clearmargins fixed pitch=10 courier ]

pcl_init=[ normalpage ]

##
## Text and Incompatible file type conversion control
##
##  Problem:  you get files of very odd type and want to print
##   them,  but you need a converter program to do so
##
## Step 0:  set default file language type.  This is used if the
##   the language type is explicitly determined.
##    default_language=unknown
##
## Step 1:  determine file type
##
##  Method 1 - SIMPLE, BUT LIMITED - let ifhp detect the file type
##  this will be pjl, ps, text, or unknown
##  (option: forceconversion@, file_util_path=)
##
##  Method 2 - POWERFUL, BUT MORE COMPLEX
##   Force the file utility to find the file type
##       - the file utility's output is lower cased,
##       multiple whitespace is removed, and all white space
##       (blanks, tabs, LF, HT, etc) are replaced
##       by underscores
##  (option: forceconversion, file_util_path=/path_to_file_utility)
##
##  Method 3: - let ifhp try to find the simple ones,
##     and then use file utiltyh.  (default)
##  (option: forceconversion@, file_util_path=/path_to_file_utility)
##
## Step 2:  do conversion
##
## file_output_match = [
##   *pcl*        pcl \%s{pcl_converter}
##   *ps*         ps  \%s{ps_converter}
##   *postscript* ps  \%s{ps_converter}
##   *pjl*        pjl \%s{pjl_converter}
## # if your printer understands PCL, use the next line
## # *text*       pcl \%s{pcl_converter}
## # if your printer only understands PostScript, use the next line
##   *text*       ps  \%s{text_converter}
##   *_gif_*  pcl /usr/lib/lpfilters/gif2pcl --autosize -x 2400 -y 3300 -d=300 -o-
##   *            unknown
## # for rasterizing
## # if you need to rasterize, use: 
##   *text*       raw  \%s{text_converter}
##   *ps*         raw  \%s{ps_converter}
##   *postscript* raw  \%s{ps_converter}
## ]
##   *text*       ps  /usr/bin/a2ps -q -B -1 -M Letter --borders=no -o-
##   ^^^ glob match
##                ^^ result type
##                    ^^ optional conversion program
##
## 
## We match the (method 1) determined file type file or (method 2)
## file utility output against a 'glob' pattern.  This pattern is URL
## encoded so that it can include spaces or other characters.
## 
## The if there is a match,  the resulting conversion output type is set to
## the second entry.  If this is 'unknown', then the file is not
## printed.
##
## If the conversion output type is 'filter',  then the converter is
## run on the file and the converted output is used again.  For example:
##   *gzip_compressed* filter gzip -c -d
## This would cause the gzip program to be used to uncompress the file
##
## The third entry (and rest of line) is the conversion program and
## options to use.  As shown above, this can be an option whose
## value is expanded and substituted.  For example:
##
## gs_converter= [ /usr/bin/gs -dSAFER -dBATCH -q -sOutputFile=-
##   -sDEVICE=\%s{gs_device} \%s{gs_options} -
##  ]
## ps_converter=\%s{gs_converter}
##
##
## a2ps_converter= [ /usr/bin/a2ps -q -B -1 -M Letter --borders=no -o- ]
## text_converter= \%s{a2ps_converter}
##
## If no conversion is specified,  then the original
## file is used.  If the program has pipe or meta characters,  then
## it is executed using /bin/sh -C 'program spec',   allowing you to
## pipe output of one program to another.
##
## 
##  The converter program command line ZOPTS and TOPTS words are replaced with
##  the values of the -Z flag and options and -T flag and options respectively,
##  and the ARGV word with the entire set of ifhp filter command line options.
##  For example,  if the filter was /usr/lib/lpfilters/mystuff ZOPTS
##  and you did lpr -Zlandscape,  then you would get
##     /usr/lib/lpfilters/mystuff -Zlandscape.
##  This allows you to pass options to the converter
##
##  The conversion program exit status must be 0 for successful conversion.
##  Please note that programs such as enscript exit with non-zero
##  exit status when they perform conversions correctly but need to wrap lines,
##  or have some minor difficulty with non-ascii characters in the input.
##  The use of a wrapper such as shown below is recommended,  and is the
##  default with ifhp:
##    #!/bin/sh
##    # /usr/lib/lpfilters/wrapper path [options]
##    # wrapper script for enscript and others
##    #   path is the path to the program and options are the
##    #   options to pass.  The program is run and then the exit
##    #   code is corrected
##    program=$1
##    status=1;
##    shift
##    if test -n "$program" ; then
##      $program "$@"
##      status=$?
##    fi;
##    case "$status" in
##      1 ) exit $status;;
##    esac
##    exit 0
## 
##  Spaces in the file utility output can be matched with %20
##  (URL escaped space)
## 
##  file - utility to determine file type
##     ftp://ftp.astron.com/pub/file/
##     ftp.deshaw.com/pub/file/
##     Also available from the RedHat.com SRPMS in (of course) rpm format

# set forceconversion to force the file(1) utility to be used
default_language=text
forceconversion@

##  UNIX File utility path
file_util_path= /usr/bin/file -
##  Patterns and Converters
# example conversion program
file_output_match = [
  *postscript*		ps	\%s{ps_converter}
  *pcl*			pcl	\%s{pcl_converter}
  *pjl*			pjl	\%s{pjl_converter}
  *printer*job*language*	pjl
  *gzip_compressed*	filter	\%s{gzip_decompress}
  *dvi*			filter	/usr/bin/dvips -f
  *pdf*			filter	/usr/bin/pdf2ps - -
  *roff*		filter	/usr/bin/trofftops
  *jpeg*		filter	/usr/bin/djpeg -pnm
  *pgm*			filter	/usr/bin/pnmtops
  *ppm*			filter	/usr/bin/pnmtops
  *pnm*			filter	/usr/bin/pnmtops
  *gif*			filter	/usr/bin/giftopnm
  *sun_raster*		filter	/usr/bin/rasttopnm
  *tiff*		filter	/usr/bin/tifftopnm
  *png*			filter	/usr/bin/pngtopnm
  *bmp*			filter	/usr/bin/bmptoppm
  *text*		pcl	\%s{text_converter}
  ]

# gs_device=epsonc
# gs_options=-r240x72
# gs_converter= [ /usr/bin/gs -dSAFER -dBATCH -q -sOutputfile=- -sDEVICE=\%s{device}
#   \%s{gs_options} -
# ]
#
gs_converter= [ /usr/bin/gs -q -dSAFER -dBATCH -sOutputFile=- -sDEVICE=\%s{gs_device} \%s{gs_options} - ]
gs_unidriver= [ /usr/bin/gs -q -dSAFER -dBATCH -sOutputFile=- @\%s{gs_device} \%s{gs_options} - ]
a2ps_converter= [ /usr/bin/a2ps -q -B -1 -M Letter --borders=no -o- ]

gzip_decompress = [ /bin/gzip -c -d ] 

ps_converter=
pcl_converter=
pjl_converter=
text_converter=

## you may need a temp file location
##
##  This will be extended to ..ifhpXXXXX
##   for use by the unix mktemp() routine
##
#tempfile=/var/tmp/ifhp

## Printer Specific Configurations

## Apple or PostScript Printers
# PRINTER % - PostScript printer, text to PS conversion, status, pagecount support
[ apple postscript ps ]
pjl@
pcl@
ps
text@
file_output_match = [
  *postscript*       ps
  *text*             ps  \%s{a2ps_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
  ]

## PCL Only Printer
# PRINTER % - PCL only printer, write only, no status
[ pcl ]
status@
pjl@
pcl
ps@
text@
file_output_match = [
  *pcl*  pcl
  *text*  pcl
  *gzip_compressed*  filter  \%s{gzip_decompress}
 ]

# PRINTER % - PCL only printer, write only, no status, GhostScript to PCL conversion
[ pcl_gs ]
status@
pjl@
pcl
ps@
text@
gs_device=ljet4
file_output_match = [
  *pcl*  pcl
  *text*  pcl
#  postscript to PCL conversion
  *postscript*  pcl \%s{gs_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
 ]

# PRINTER % - GhostScript PostScript to raster conversion, write only, no status
[ ghostscript gs ]
status@
pcl@
pjl@
ps
text@
file_output_match = [
  *postscript*       raw     \%s{gs_converter}
  *text*             filter  \%s{a2ps_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
 ]

## HP Printers
## These all support PJL to a limited extent and PCL as well
## This assumes that you have a PostScript Cartridge
### 
# PRINTER % - HP LaserJet III si, default with limited PJL capability
[ hpiiisi hp3si ]
pjl_only=[
    COMMENT ENTER
  ]

# PRINTER % - HP LaserJet 4 Family, HP LaserJet {/hp(.*)/$1/}
[ hp4 hp4m hp4si hp4simx hp4plus hp4mplus hp4v hp4mv hp4p hp4mp hp4pj hpljpro hp4lc ]

pjl_except=[
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD FSINIT FSMKDIR
  ]

# PRINTER % - HP LaserJet 4M, has limited pagecount capability
[ hp4m ]
pagecount=ps

#
# Provided by Wilfried.Gaensheimer@infineon.com
#   --- Note: see also the HP5000 and HP8000 entries
# If you know "more", let me (Wilfried.Gaensheimer@infineon.com) know
#
# PRINTER hp4mplus - HP LaserJet 4MPlus
[ hp4mplus ]

pjl_only=[
    COMMENT DEFAULT DINQUIRE ECHO ENTER EOJ
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD
    FSINIT FSMKDIR
    INFO INITIALIZE INQUIRE JOB OPMSG PJL RDYMSG
    RESET SET STMSG USTATUS USTATUSOFF
    COPIES
  ]

#
# Some options do not really apply to the hp4mplus
# (I used that entry to try the new 4500 DN, too).
# - select tray (I left all of them in, of course the hp4mplus
#   doesn't have all of them ....)
# - manual feed
# - duplex, shortedge, ....
# - select a4 or letter or legal paper
# - set printquality and/or resolution (I guess that will
#    interact if you use both)
# - select rendermode (does not apply to the hp4mplus ...
#
# If you know "more", let me (wig or Wilfried.Gaensheimer@infineon.com)
# know. Or if I got it wrong (i'm still trying to figure out
# how this works) ... wig
#


pjl_printquality=@PJL SET PRINTQUALITY = \%s{printquality}
pjl_draft=@PJL SET PRINTQUALITY = DRAFT
pjl_normal=@PJL SET PRINTQUALITY = NORMAL
pjl_high=@PJL SET PRINTQUALITY = HIGH

pjl_rendermode=@PJL SET RENDERMODE = \%s{rendermode}
pjl_color=@PJL SET RENDERMODE = COLOR
pjl_grayscale=@PJL SET RENDERMODE = GRAYSCALE

pjl_user_opts += [
	color draft grayscale
	high normal printquality rendermode
  ]


# PRINTER % - HP LaserJet 4 Family, HP LaserJet {/hp(.*)/$1/}
[ hp4v hp4mv ]
# Paper Selection By Size

ps_letter= <</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null>> setpagedevice
ps_legal= <</DeferredMediaSelection true /PageSize [612 1008] /ImagingBBox null>> setpagedevice
ps_ledger=<</DeferredMediaSelection true /PageSize [792 1224] /ImagingBBox null>> setpagedevice
ps_oversize=<</DeferredMediaSelection true /PageSize [842 1274] /ImagingBBox null>> setpagedevice
ps_a3 = <</DeferredMediaSelection true /PageSize [842 1191] /ImagingBBox null>> setpagedevice
ps_a4 = <</DeferredMediaSelection true /PageSize [595 842] /ImagingBBox null>> setpagedevice


# PRINTER % - HP LaserJet 4 Family, HP LaserJet {/hp(.*)/$1/}
[ hp5l hp6l hp1100 ]
pjl_except=[
    EOJ JOB OPMSG RDYMSG STMSG
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD FSINIT FSMKDIR
  ]


# PRINTER % - Hp LaserJet 4L, PCL only
[ hp4l ]
status@
pjl@
pcl
ps@
text@
gs_device=laserjet
gs_options=-r300x300
file_output_match = [
  *pcl*  pcl
  *text*  pcl
#  postscript to PCL conversion
  *postscript*  pcl \%s{gs_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
 ]



# PRINTER % - HP LaserJet {/hp(.*)/$1/}
[ hp4ml hp5p hp5mp hp6p hp6mp ]
pjl_except=[
    OPMSG RDYMSG STMSG
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD FSINIT FSMKDIR
  ]

# PRINTER % - HP LaserJet {/hp(.*)/$1/}
[ hp5 hp5si hp5simx hp5m ]

pjl_except=[
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD
  ]

# There may be problems with the copypage and EOJ interaction
#ps_init = [ nocopypage ]
#ps_nocopypage = /copypage {showpage} def
ps_manual=<</ManualFeed true>> setpagedevice
ps_envelope=<</DeferredMediaSelection true /MediaPosition 2>> setpagedevice

ps_inupper=[ intray1 ]
ps_inlower=[ intray2 ]

## *InputSlot Tray1/Tray 1:
ps_intray1=<</DeferredMediaSelection true /MediaPosition 3>> setpagedevice

##InputSlot Tray2/Tray 2: 
ps_intray2=<</DeferredMediaSelection true /MediaPosition 0>> setpagedevice

##InputSlot Tray3/Tray 3: 
ps_intray3=<</DeferredMediaSelection true /MediaPosition 1>> setpagedevice

##InputSlot Tray4/Tray 4: 
ps_intray4=<</DeferredMediaSelection true /MediaPosition 4>> setpagedevice

# Paper Selection By Size
ps_letter= <</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null>> setpagedevice
ps_legal= <</DeferredMediaSelection true /PageSize [612 1008] /ImagingBBox null>> setpagedevice
ps_ledger=<</DeferredMediaSelection true /PageSize [792 1224] /ImagingBBox null>> setpagedevice
ps_oversize=<</DeferredMediaSelection true /PageSize [842 1274] /ImagingBBox null>> setpagedevice
ps_a3 = <</DeferredMediaSelection true /PageSize [842 1191] /ImagingBBox null>> setpagedevice
ps_a4 = <</DeferredMediaSelection true /PageSize [595 842] /ImagingBBox null>> setpagedevice


## *OutputBin Upper/Top Output Bin (Face Down):
##ps_outupper=<</Staple 0 /OutputType (TOP OUTPUT BIN)>> setpagedevice
## *OutputBin Left/Left Output Bin (Face Up):
##ps_outlower=
##   currentpagedevice /OutputAttributes get
##   5 known
##         {<</Staple 0 /OutputType (FACE UP BIN)>> setpagedevice}
##         {<</Staple 0 /OutputType (LEFT OUTPUT BIN)>> setpagedevice}
##       ifelse
##
## *OutputBin Stacker/Stacker (Face Down):
ps_outbin2=<</Staple 0 /OutputType (OPTIONAL OUTBIN 2)>> setpagedevice

## *OutputBin Separator/Job Separator (Face Down): 
ps_outbin3=<</Staple 0 /OutputType (OPTIONAL OUTBIN 2)>> setpagedevice

## *OutputBin Stapler/Stapler (Face Down):         
ps_outbin4=<</Staple 2>> setpagedevice

## *OutputBin OutputBin1/Mailbox 1 (Face Down):    
ps_outbin5=<</Staple 0 /OutputType (OPTIONAL OUTBIN 2)>> setpagedevice

## *OutputBin OutputBin2/Mailbox 2 (Face Down):    
ps_outbin6=<</Staple 0 /OutputType (OPTIONAL OUTBIN 3)>> setpagedevice

## *OutputBin OutputBin3/Mailbox 3 (Face Down):    
ps_outbin7=<</Staple 0 /OutputType (OPTIONAL OUTBIN 4)>> setpagedevice

## *OutputBin OutputBin4/Mailbox 4 (Face Down):    
ps_outbin8=<</Staple 0 /OutputType (OPTIONAL OUTBIN 5)>> setpagedevice

## *OutputBin OutputBin5/Mailbox 5 (Face Down):    
ps_outbin9=<</Staple 0 /OutputType (OPTIONAL OUTBIN 6)>> setpagedevice

## *Duplex None/Off: 
ps_simplex=
     <</Duplex false /Tumble false>> setpagedevice
## *Duplex DuplexNoTumble/Long-Edge Binding: 
ps_duplex=
	<</Duplex true /Tumble false>> setpagedevice
ps_lduplex= [ duplex ]
## *Duplex DuplexTumble/Short-Edge Binding: 
ps_duplexshort=
	<</Duplex true /Tumble true>> setpagedevice
ps_sduplex= [ duplexshort ]

ps_tumble=<</Tumble true>> setpagedevice
ps_shortedge=[ tumble ]

ps_user_opts += [
    intray1 intray2 intray3 intray4
    outbin2 outbin3 outbin4 outbin5 outbin6 outbin7 outbin8 outbin9
 ]


## We have printcap information
[ hp4000_pcl ]
## pcl paper source selection
##   use -Zsource=n
## 0 - current, 1 - tray 2 (first cassette), 2 - manual
## 3 - ????
## 4 - tray 1 (Multipurpose), 5 - tray 3 (second cassete)
## 6 - envelope    8 - tray 4 (third cassette)
## 20-39 high capacity input trays 2-21
##

pcl_intray1=\033&l4H
pcl_intray2=\033&l1H
pcl_intray3=\033&l5H
pcl_intray4=\033&l8H

pcl_bond         = \033&n5WdBond
pcl_plain        = \033&n6WdPlain
pcl_color        = \033&n6WdColor
pcl_labels       = \033&n7WdLabels
pcl_recycled     = \033&n9WdRecycled
pcl_letterhead   = \033&n11WdLetterhead
pcl_cardstock    = \033&n10WdCardstock
pcl_prepunched   = \033&n11WdPrepunched
pcl_transparency = \033&n13WdTransparency

pcl_user_opts += [
    intray1 intray2 intray3 intray4
    bond plain color labels recycled
    letterhead cardstock prepunched transparency
 ]

# now we define the additional goodies that we have

# PRINTER % - HP LaserJet {/hp(.*)/$1/}
[ hp5simopier hp4000 ]
tc=hp4000_pcl


# PRINTER % - HP Color LaserJet {/hpcolorlj(.*)/$1/}
[ hpcolorlj hpcolorlj5 hpcolorlj5m ]
pjl_only=[
    COMMENT ECHO ENTER EOJ
    INFO INITIALIZE INQUIRE JOB PJL RDYMSG
    USTATUS USTATUSOFF
  ]

# PRINTER hpdj1200 - HP Design Jet 1200 Family
[ hpdj1200 ]
pjl_only=[
    COMMENT ENTER
    PJL
  ]
status@


# PRINTER hppjxl300 - HP Paint Jet XL 300 Family
[ hppjxl300 ]
pjl_only=[
    COMMENT ENTER
    PJL
  ]
status@

# PRINTER hpdj1600 - HP Design Jet 1600 Family
[ hpdj1600 ]
pjl_only=[
    COMMENT DEFAULT DINQUIRE ECHO ENTER EOJ
    JOB PJL
    RESET SET
  ]

# PRINTER % - HP DeskJet {/hpdj(.*)/$1/}
[ hpdj200 hpdj220 hpdj600 hpdj650 ]

pjl_only=[
    COMMENT ECHO ENTER
    INFO 
    USTATUS USTATUSOFF
  ]

# PRINTER % - HP DeskJet {/hpdj(.*)/$1/}
[ hpdj230 hpdj250c hpdj330 hpdj350c hpdj430 hpdj450c hpdj455ca hpdj700 hpdj750c hpdj750cplus hpdj755cm hpdj2000cp ]
pjl_only=[
    COMMENT ECHO ENTER EOJ
    INFO JOB RESET SET
    USTATUS USTATUSOFF
  ]


#
# The HP Design Jet 2500 CP and the HP2500 (hp2500) are NOT the same
#
# hp2500 hp2500cm chp2500c
# HP 2500C, HP 2500C+ and HP 2500CM - What's the Difference?
# 
# HP 2500C
# 
# The HP 2500C with 4MB RAM is a network capable printer for Windows
# and DOS. This is the base model in the HP 2500C series printer
# family. The printer is designed to leverage existing hardware
# investments with the flexibility to install a HP MIO print server,
# upgrade with Adobe PostScript 3 or PCL 5Ce and memory up to 84MB
# RAM when you need it.
# 
# HP 2500C+2
# 
# The HP 2500C+ with 12 MB RAM and PCL 5Ce, is a network capable
# printer designed to serve users who have standardized on a PCL 5Ce
# printing solution or require a replacement for the DeskJet 1200C
# or DeskJet 1600C series of color inkjet printers. This printer also
# offers the flexibility to install a HP MIO print server, upgrade
# with Adobe Postscript 3 and memory up to 84 MB RAM, when you need
# it.
# 
# HP 2500CM 
# 
# The HP 2500CM with 20 MB RAM and Adobe PostScript 3 is a network
# ready printer for Macintosh, Windows and DOS. This printer is
# designed for immediate workgroup connectivity with built-in HP MIO
# print server and true Adobe PostScript 3, upgradable to a total of
# 84MB RAM for maximum document portability.
# 

# PRINTER % - HP Design Jet {/hp(.*)/$1/} - No PCL, PostScript Only
[ hp2500 hp2500cm hp2500c ]

# no PCL, only PostScript and limited PJL
pcl@
ps
pjl

pjl_only=[
    COMMENT ECHO ENTER EOJ
    INFO JOB RESET SET
    USTATUS USTATUSOFF
  ]

# PRINTER % - HP Design Jet {/hp(.*)/$1/} - PCL and PostScript
[ hp2500cm ]
tc=hp2500
pcl

# PRINTER hpdj2500cp - HP DesignJet 2500CP, not HP2500, HP2500c, HP2500cm
[ hpdj2500cp ]

# Supplied by: Wilfried.Gaensheimer@infineon.com
# my try to get most out of our HP DesignJet 2500 ...
# please let me (Wilfried.Gaensheimer@infineon.com) know when I got it wrong  ...
#wig19990813
#   Modified Patrick Powell Fri Aug 13 11:14:35 PDT 1999

pjl_only=[
    COMMENT ECHO ENTER EOJ
    INFO JOB RESET SET
    USTATUS USTATUSOFF
  ]

# This device does not support pagecount (obvious ...)
pagecount@

#
# According to my copy of the PJL reference guide it supports
# only the DEVICE and the TIMED USTATUS commands ...
# I just don't know what these are for ... ?
#
pjl_ustatus=
    @PJL USTATUSOFF
    @PJL USTATUS DEVICE = ON
    @PJL USTATUS TIMED = 10

#
# setting orientation, printqualtity, rendermode with PJL did not work ...
# I left them in, but PostScript seems to be the better place ...
#
#
# DesignJet does not honor these PJLs???
# O.k., so we resort to ps_ (see below) ....
# I left them in because they might work one day ....
#
pjl_a3=@PJL SET PAPERLENGTH = 8420
       @PJL SET PAPERWIDTH = 11910

pjl_draft=@PJL SET PRINTQUALITY = DRAFT
pjl_normal=@PJL SET PRINTQUALITY = NORMAL
pjl_high=@PJL SET PRINTQUALITY = HIGH

pjl_color=@PJL SET RENDERMODE = COLOR
pjl_grayscale=@PJL SET RENDERMODE = GRAYSCALE

pjl_user_opts +=[ 
    autoselect autoconf
    paperlength paperwidth printquality draft normal high
    gamma color greyscale rendermode 
    ]
  
#
# We need to use the PostScript options ...
# Some of them might be there because of copy&paste ...
#
#
# The options allow to:
#   - choose manualfeed
#   - choose certain papersizes ( fb is for full bleed)
#   - scale on papersize to another (use -Za4,autoscale_a3)
#   - choose rendermode (color vs. grayscale)
#   - set gamma (defaults to 0.333, allows to reduce intensity
#     for ink based printing of "real" pictures
#   - set orientation
#   - set printquality
#   - set resolution (t.b.d.)
#   
# BTW.: If you want to have a A3 printed in endless paper, combine that
#   with the "landscape" option

ps_autoscale_letter=/HPDict /ProcSet findresource /SetAutoScale get
        true exch exec /HPDict /ProcSet findresource /SetDestinationPageSize
        get [612 792 ] exch exec <<>> setpagedevice

ps_autoscale_a4=/HPDict /ProcSet findresource /SetAutoScale get
        true exch exec /HPDict /ProcSet findresource /SetDestinationPageSize
        get [595 842] exch exec <<>> setpagedevice

ps_autoscale_a3=/HPDict /ProcSet findresource /SetAutoScale get
        true exch exec /HPDict /ProcSet findresource /SetDestinationPageSize
        get [842 1191] exch exec <<>> setpagedevice

ps_autoscale_a0=/HPDict /ProcSet findresource /SetAutoScale get
        true exch exec /HPDict /ProcSet findresource /SetDestinationPageSize
        get [2384 3370] exch exec <<>> setpagedevice

ps_autoscale_36x60=/HPDict /ProcSet findresource /SetAutoScale get
        true exch exec /HPDict /ProcSet findresource /SetDestinationPageSize
        get [2592 4320] exch exec <<>> setpagedevice

ps_a4=<</PageSize[595 842]/ImagingBBox null>> setpagedevice

# full bleed ...
ps_a4fb=<</PageSize[760 1059]/ImagingBBox null>> setpagedevice

ps_a3=<</PageSize[842 1191]/ImagingBBox null>> setpagedevice

ps_a3fb=<</PageSize[1007 1408]/ImagingBBox null>> setpagedevice

ps_a0=<</PageSize[2384 3370]/ImagingBBox null>> setpagedevice

ps_grayscale=<< /ProcessColorModel /DeviceGray >> setpagedevice

ps_color=<< /ProcessColorModel /DeviceCMYK >> setpagedevice

ps_landscape=userdict /HPCustTrans known
  {
    (<<) cvx exec
    /Orientation
    userdict /HPCustTrans get 
    1 eq 
    { 0 }
    { 1 } ifelse 
    (>>) cvx exec setpagedevice
  }
  {
    <</Orientation 1>> setpagedevice
  } ifelse

ps_portrait=userdict /HPCustTrans known
  {
    (<<) cvx exec
    /Orientation
    userdict /HPCustTrans get 
    (>>) cvx exec setpagedevice
  }
  {
     <</Orientation 0>> setpagedevice
  } ifelse

# set gamma correction to reduce color intensity for InkJets ..
gamma=0.333
ps_gamma={ \%6.3f{gamma} exp } dup dup currenttransfer set colortransfer

ps_printquality=[ \%s{printquality} ]

ps_draft=  << /HWResolution [300 300]
    /PostRenderingEnhance true
    /PostRenderingEnhanceDetails
    << /PrintQuality 1
    /Type 11 >>
    >> setpagedevice

ps_normal= << /HWResolution [300 300]
    /PostRenderingEnhance true
    /PostRenderingEnhanceDetails
    << /PrintQuality 2
      /Type 11 >>
  >> setpagedevice

ps_fast= [ high ]
ps_high= << /HWResolution [600 600]
    /PostRenderingEnhance true
    /PostRenderingEnhanceDetails
    << /PrintQuality 3
      /Type 11 >>
    >> setpagedevice

ps_user_opts += [
	a0 a3 a3fb a4 a4fb autoscale_36x60 autoscale_a0 autoscale_a3
	autoscale_a4 autoscale_letter color draft fast
	gamma grayscale high landscape normal portrait printquality
    font
 ]

#
# O.K., here we are the end of the story, at least today ...
#wig19990813
#


# PCL Only Support
#  This is seems to handle most printers that
#  do not have PostScript.  -Z options may not work

# PRINTER lj3pclonly - LaserJet 3 with PCL only
[ lj3pclonly ]
status@
ps@
pjl@
text
pcl
gs_device=ljet3
gs_options=
ps_converter= [ /usr/bin/gs -q -dSAFER -dBATCH -sDEVICE=\%s{gs_device} \%s{gs_options} - ]

file_output_match = [
  *postscript*  pcl \%s{ps_converter}
  *pcl*         pcl
  *text*        pcl
  *gzip_compressed*  filter  \%s{gzip_decompress}
  ]


# PRINTER % - HP Color LaserJet Printer {/hp(.*)/$1/}
[ hp4500 hp8500 hp8550 ]

# Apparently this printer does not like ^D at start of job
ps_eoj_at_start@
pjl_inupper=@PJL SET MEDIASOURCE = TRAY0
pjl_inlower=@PJL SET MEDIASOURCE = TRAY1

## paper source selection
##   use -Zsource=n
## 0 - current, 1 - lower, tray2, 2 - manual paper, 3 - manual envelope
## 4 - upper tray1,   5 - optional paper, high capacity - tray3

pcl_intray1=\033&l4H
pcl_intray2=\033&l1H
pcl_intray3=\033&l5H

pcl_bond         = \033&n5WdBond
pcl_plain        = \033&n6WdPlain
pcl_color        = \033&n6WdColor
pcl_labels       = \033&n7WdLabels
pcl_recycled     = \033&n9WdRecycled
pcl_letterhead   = \033&n11WdLetterhead
pcl_cardstock    = \033&n10WdCardstock
pcl_prepunched   = \033&n11WdPrepunched
pcl_preprinted   = \033&n11WdPreprinted
pcl_transparency = \033&n13WdTransparency
pcl_rough        = \033&n6WdRough
pcl_vellum       = \033&n7WdVellum
pcl_gloss        = \033&n7WdGloss

pcl_user_opts += [
	intray1 intray2 intray3
    bond plain color labels
	recycled letterhead cardstock prepunched
	preprinted transparency rough vellum gloss
 ]
#duplex (optional)
ps_simplex= <</Duplex false /Tumble false>> setpagedevice
ps_duplex= <</Duplex true /Tumble false>> setpagedevice
ps_lduplex=[ duplex ]
ps_duplexshort= <</Duplex true /Tumble true>> setpagedevice
ps_sduplex=[ duplexshort ]

ps_tumble= <</Tumble false>> setpagedevice
ps_shortedge=[ tumble ]

#Tray
#  This is totally bizzare and does not make sense
#  but this is what the PPD file says.
ps_inupper=  <</MediaPosition 0>> setpagedevice
ps_intray1=  <</MediaPosition 0>> setpagedevice
ps_inlower= <</MediaPosition 3>> setpagedevice
ps_intray2= <</MediaPosition 3>> setpagedevice
ps_intray3= <</MediaPosition 1>> setpagedevice

ps_manual= <</ManualFeed true>> setpagedevice

#PageSize
ps_letter= <</PageSize [612 792] /ImagingBBox null>> setpagedevice
ps_legal= <</PageSize [612 1008] /ImagingBBox null>> setpagedevice
ps_executive= <</PageSize [522 756] /ImagingBBox null>> setpagedevice
ps_a3= <</PageSize [842 1191] /ImagingBBox null>> setpagedevice
ps_a4= <</PageSize [595 842] /ImagingBBox null>> setpagedevice
ps_a5= <</PageSize [420 595] /ImagingBBox null>> setpagedevice
ps_b5= <</PageSize [516 729] /ImagingBBox null>> setpagedevice
ps_envb5= <</PageSize [499 709] /ImagingBBox null>> setpagedevice
ps_env10= <</PageSize [297 684] /ImagingBBox null>> setpagedevice
ps_envc5= <</PageSize [459 649] /ImagingBBox null>> setpagedevice
ps_envmonarch= <</PageSize [312 624] /ImagingBBox null>> setpagedevice
#MediaType
ps_plain= <</MediaType (Plain)>> setpagedevice
ps_preprinted= <</MediaType (Preprinted)>> setpagedevice
ps_letterhead= <</MediaType (Letterhead)>> setpagedevice
ps_transparency= <</MediaType (Transparency)>> setpagedevice
ps_glossy= <</MediaType (Gloss)>> setpagedevice
ps_prepunched=  <</MediaType (Prepunched)>> setpagedevice
ps_labels= <</MediaType (Labels)>> setpagedevice
ps_bond= <</MediaType (Bond)>> setpagedevice
ps_recycled= <</MediaType (Recycled)>> setpagedevice
ps_color= <</MediaType (Color)>> setpagedevice
ps_heavy= <</MediaType (Heavy)>> setpagedevice
ps_cardstock= <</MediaType (Cardstock)>> setpagedevice
# Print Color as Gray
ps_colorasgray= <</ProcessColorModel /DeviceGray>> setpagedevice
ps_colorascolor= <</ProcessColorModel /DeviceCMY>> setpagedevice
# CMYK Ink Space
ps_cmykinksfast= << /CMYKInkSet 0 >> setpagedevice
ps_cmykinksswop= << /CMYKInkSet 1 >> setpagedevice
ps_cmykinkseuro= << /CMYKInkSet 2 >> setpagedevice
ps_cmykinkstoyo= << /CMYKInkSet 3 >> setpagedevice

ps_user_opts=[
    a3 a4 a5 b5 bond cardstock cmykinkseuro cmykinksfast cmykinksswop
    cmykinkstoyo color colorascolor colorasgray duplex duplexshort
    env10 envb5 envc5 envmonarch executive glossy heavy inlower
    inupper labels legal letter letterhead manual plain preprinted
    prepunched recycled simplex transparency tray1 tray2 tray3
	lduplex sduplex tumble shortedge
]

# PRINTER hp5000 - HP5000  Model number: C4111A (LaserJet 5000N)
#
# Hewlett Packard 5000 Series
# Model number: C4111A (LaserJet 5000N)
# Printer short description: Letter/Legal/A4/A3, PostScript Level3
#
# Input taken from
# hp5000_6.ppd
#
# Author: Wilfried.Gaensheimer@infineon.com
# wig19991020
#
# Status: untested
#
# Open Issues:
#
# Implemented commands:
#
# PJL:
#
# paper: A3,A4,Letter,Legal,Ledger/Tabloid/11x17
# resolution: 300/300dpi | 600/600dpi | 1200/1200dpi
# ??bitsperpixel: ( 2 | 1 )
# ??economode: ( ON | OFF )
# 
# Postscript:
#
# ?? collate: ( true | false )
# ?? smoothing: ( true | false )
# pagesize/papersize/paper:
#        letter | executive | legal | ledger/tabloid/11x17 | a3 | a4 | a5
#   not implemented: ....
# source/tray: upper/tray1 | manual/manualfeed | middle/tray2 |
#             lower/tray3 |largecapacity/tray4/large |
# media type: plain | transparency | preprinted
#   not implemented: | letterhead | prepunched | labels | bond | recycled |
#              colorpaper (*) | cardstock | rough
# (*) color in PPD
# ?? scalepattern (not implemented)
# ?? halftone: enhanced | standard (not implemented)
# duplex | sduplex/duplexshort | simplex | shortedge/tumble

# PRINTER hp5000 - HP5000 Model C4111A (LaserJet 5000)
[ hp5000 ]

pjl_only=[
    COMMENT DEFAULT DINQUIRE ECHO ENTER EOJ
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD
    FSINIT FSMKDIR
    INFO INITIALIZE INQUIRE JOB OPMSG PJL RDYMSG
    RESET SET STMSG USTATUS USTATUSOFF
    COPIES
]

economode=ON
pjl_economode=@PJL SET ECONOMODE = \%s{economode}
pjl_economodeoff=@PJL SET ECONOMODE = OFF

pjl_user_opts=[
	bitsperpixel economode economodeoff
    ]

# we have the same PCL as the HP4000
tc=hp4000_pcl

# now we do the PostScript

collate=true
ps_collate=<</Collate \%s{collate}>> setpagedevice

# smoothing: ( true | false )
smoothing=true
ps_smoothing=
   << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 2 /Type 8 >>
    >> setpagedevice
ps_nosmoothing=
   << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 0 /Type 8 >>
    >> setpagedevice

#
# Paper size selection ...
#
ps_letter=<</PageSize [612 792] /ImagingBBox null>> setpagedevice
ps_executive= <</PageSize [522 756] /ImagingBBox null>> setpagedevice
ps_legal= <</PageSize [612 1008] /ImagingBBox null>> setpagedevice
ps_ledger= <</PageSize [792 1224] /ImagingBBox null>> setpagedevice
ps_a3= <</PageSize [842 1191] /ImagingBBox null>> setpagedevice
ps_a4= <</PageSize [595 842] /ImagingBBox null>> setpagedevice
ps_a5= <</PageSize [420 595] /ImagingBBox null>> setpagedevice

#
# source ...
#
ps_inupper=<</ManualFeed false /MediaPosition 3>> setpagedevice
ps_intray1=[ upper ]
ps_manual=<</ManualFeed true /MediaPosition 3>> setpagedevice
ps_manualfeed=[ manual ]
ps_inmiddle=<</ManualFeed false /MediaPosition 0>> setpagedevice
ps_intray2=[ middle ]
ps_inlower=<</ManualFeed false /MediaPosition 1>> setpagedevice"
ps_intray3=[ lower ]
ps_inlargecapacity=<</ManualFeed false /MediaPosition 4>> setpagedevice
ps_inlarge=[ largecapacity ]
ps_intray4=[ largecapacity ]

#
# Media type ...
#
ps_plain=<</MediaType (Plain)>> setpagedevice
ps_preprinted=<</MediaType (Preprinted)>> setpagedevice
ps_transparency=<</MediaType (Transparency)>> setpagedevice

#
# Duplex control ..
#
ps_duplex=<</Duplex true>> setpagedevice
ps_lduplex=[ duplex ]
ps_duplexshort=<</Duplex true /Tumble true>> setpagedevice
ps_sduplex=[ duplexshort ]
ps_simplex=<</Duplex false /Tumble false>> setpagedevice

ps_tumble=<</Tumble true>> setpagedevice
ps_shortedge=[ tumble ]

ps_user_opts += [
	collate executive inlarge inlargecapacity
	inmiddle intray intray1 intray2 intray3 intray4
	nosmoothing pagesize paper
	papersize plain preprinted smoothing
	source
    ]

#
# Take PCL from generic section ....
#

#!End of [ hp5000 ]

#
# Hewlett Packard 8000 Series, 8100 Series
#
# Printer short description: Letter/Legal/A4, PostScript Level3
#                            300/600
#
# Input taken from
# hp8000_5.ppd
#
# Author: Wilfried.Gaensheimer@infineon.com
# wig19990921
#
# Status: untested
#
# Open Issues:
#
# Implemented commands:
#
# PJL:
#
# resolution: 300/300dpi | 600/600dpi
# bitsperpixel: ( 2 | 1 )
# economode: ( ON | OFF )
# 
# Postscript:
#
# outputbin: upper/topbin | left/leftbin | 
#   not implemented: stacker | collator |separator | stapler | ....
# collate: ( true | false )
# smoothing: ( true | false )
# pagesize/papersize/paper:
#        letter | executive | legal | tabloid/11x17 | a3 | a4 | a5
#   not implemented: w842h1274 | b4 | b5 | doublepostcard |
#                    w612h935 | w558h774 | w774h1116 |
#                    env10 envmonarch envdl envc5 envisob5
# source/tray: upper/tray1 | manual/manualfeed | middle/tray2 |
#             lower/tray3 |largecapacity/tray4/large |
#             tray5 | envelope | plain | preprinted | 
#             transparency 
#   not implemented: | letterhead | prepunched | labels | bond | recycled |
#              colorpaper (*) | cardstock | rough
# (*) color in PPD
# scalepattern (not implemented)
# halftone: enhanced | standard
# duplex | sduplex/duplexshort | simplex | shortedge/tumble

# PRINTER % - HP Laserjet 8000 Series, {/hp(.*)/HP$1/}

[ hp8000 hp8100 ]

pjl_only=[
    COMMENT DEFAULT DINQUIRE ECHO ENTER EOJ
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD
    FSINIT FSMKDIR
    INFO INITIALIZE INQUIRE JOB OPMSG PJL RDYMSG
    RESET SET STMSG USTATUS USTATUSOFF
    COPIES
]

pjl_economodeoff=@PJL SET ECONOMODE = OFF
#ExtractedKey: JCLEconomode True/Save Toner
pjl_economode=@PJL SET ECONOMODE = ON
#ExtractedKey: JCLFastRes True/On
pjl_fastres=@PJL SET BITSPERPIXEL = 2
#ExtractedKey: JCLFastRes False/Off
pjl_fastresoff=@PJL SET BITSPERPIXEL = 1

pjl_user_opts=[
    economode economodeoff fastres fastresoff
 ]

# the HP8000 has the same PCL as the hp4000
tc=hp4000_pcl

pcl_lf_stacker=\033&l3G
pcl_stacker1=\033&l4G
pcl_stacker2=\033&l5G
pcl_stacker3=\033&l6G
pcl_stacker4=\033&l7G
pcl_stacker5=\033&l8G
pcl_stacker6=\033&l9G
pcl_stacker7=\033&l10G
pcl_stacker8=\033&l11G

pcl_user_opts += [
	lf_stacker stacker1 stacker2 stacker3 stacker4
	stacker5 stacker6 stacker7 stacker8
 ]

# now for the PostScript

ps_outputbin=[ \%s{outputbin} ]

ps_outupper=<</Staple 0 /OutputType (TOP OUTPUT BIN)>> setpagedevice
ps_topbin=[ outupper ]

ps_leftbin=
   currentpagedevice /OutputAttributes get
   4 known
         {<</Staple 0 /OutputType (FACE UP BIN)>> setpagedevice}
         {<</Staple 0 /OutputType (LEFT OUTPUT BIN)>> setpagedevice}
       ifelse
ps_outleft=[ leftbin ]
ps_outlower=[ leftbin ]

collate=true
ps_collate=<</Collate \%s{collate}>> setpagedevice

# smoothing: ( true | false )
smoothing=true
ps_smoothing=
   << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 2 /Type 8 >>
    >> setpagedevice
ps_nosmoothing=
   << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 0 /Type 8 >>
    >> setpagedevice

#
# Paper size selection ...
#
ps_letter=<</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null>> setpagedevice
ps_executive=
    <</DeferredMediaSelection true /PageSize [522 756] /ImagingBBox null>> setpagedevice
ps_legal=
    <</DeferredMediaSelection true /PageSize [612 1008] /ImagingBBox null>> setpagedevice
ps_tabloid=
  <</DeferredMediaSelection true /PageSize [792 1224] /ImagingBBox null>> setpagedevice
ps_a3=
    <</DeferredMediaSelection true /PageSize [842 1191] /ImagingBBox null>> setpagedevice
ps_a4=
    <</DeferredMediaSelection true /PageSize [595 842] /ImagingBBox null>> setpagedevice
ps_a5=
    <</DeferredMediaSelection true /PageSize [420 595] /ImagingBBox null>> setpagedevice

#
# source ...
#

ps_inupper=<</ManualFeed false /MediaPosition 3>> setpagedevice
ps_intray1=[ upper ]
ps_manual=<</ManualFeed true /MediaPosition 3>> setpagedevice
ps_manualfeed=[ manual ]
ps_inmiddle=<</ManualFeed false /MediaPosition 0>> setpagedevice
ps_intray2=[ middle ]
ps_inlower=<</ManualFeed false /MediaPosition 1>> setpagedevice"
ps_intray3=[ lower ]
ps_inlargecapacity=<</ManualFeed false /MediaPosition 5>> setpagedevice
ps_inlarge=[ largecapacity ]
ps_intray4=[ largecapacity ]
ps_intray5=<</ManualFeed false /MediaPosition 6>> setpagedevice

ps_bond= <</ManualFeed false /MediaType (Bond)>> setpagedevice
ps_cardstock= <</ManualFeed false /MediaType (Card Stock)>> setpagedevice
ps_color= <</ManualFeed false /MediaType (Color)>> setpagedevice
ps_envelope= <</ManualFeed false /MediaPosition 2>> setpagedevice
ps_labels= <</ManualFeed false /MediaType (Labels)>> setpagedevice
ps_letterhead= <</ManualFeed false /MediaType (Letterhead)>> setpagedevice
ps_plain=<</ManualFeed false /MediaType (Plain)>> setpagedevice
ps_preprinted= <</ManualFeed false /MediaType (Preprinted)>> setpagedevice
ps_prepunched=  <</ManualFeed false /MediaType (Prepunched)>> setpagedevice
ps_recycled= <</ManualFeed false /MediaType (Recycled)>> setpagedevice
ps_rough=  <</ManualFeed false /MediaType (Rough)>> setpagedevice
ps_transparency=<</ManualFeed false /MediaType (Transparency)>> setpagedevice

ps_halftone=[ \%s{halftone} ]
ps_enhanced=
  << /Install {
     currentpagedevice /HWResolution get
     dup 0 get 600 eq exch 1 get 600 eq and
     { /EnhancedColorRendering600 } { /EnhancedColorRendering } ifelse
     /ColorRendering findresource setcolorrendering
     /EnhancedHalftone /Halftone findresource sethalftone
     { } settransfer false setstrokeadjust
   }
   >> setpagedevice
   currentpagedevice /HWResolution get dup 0 get 600 eq exch 1 get 600 eq and
   {
       << /PostRenderingEnhance true
            /PostRenderingEnhanceDetails << /REValue 0 /Type 8 >>
       >> setpagedevice
   } if
   /setscreen { pop pop pop } def
   /setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
   /sethalftone { pop } def 
ps_standard=
     << /Install {
     currentpagedevice /HWResolution get
     dup 0 get 600 eq exch 1 get 600 eq and dup
     currentpagedevice /PostRenderingEnhance get
     currentpagedevice /PostRenderingEnhanceDetails get /REValue get 0 ne and
     { {/DefaultColorRenderingRE600} {/DefaultColorRenderingRE} ifelse}
     { {/DefaultColorRendering600} {/DefaultColorRendering} ifelse} ifelse
     /ColorRendering findresource setcolorrendering
     { /DefaultHalftone600 } {/DefaultHalftone} ifelse
     /Halftone findresource sethalftone
     {} settransfer false setstrokeadjust
   } >> setpagedevice
   currentpagedevice /HWResolution get dup 0 get 600 eq exch 1 get 600 eq and
   {
     << /PostRenderingEnhance true /PostRenderingEnhanceDetails
     << /REValue 0 /Type 8 >> >> setpagedevice
   } if    

#
# Duplex control ..
#
ps_duplex=<</Duplex true>> setpagedevice
ps_lduplex=[ duplex ]
ps_sduplex=<</Duplex true /Tumble true>> setpagedevice
ps_duplexshort=[ sduplex ]
ps_simplex=<</Duplex false /Tumble false>> setpagedevice

ps_tumble=<</Tumble true>> setpagedevice
ps_shortedge=[ tumble ]

ps_user_opts += [
	collate enhanced halftone inlarge inlargecapacity inmiddle intray
	intray1 intray2 intray3 intray4 intray5 leftbin nosmoothing outleft
	outputbin pagesize paper papersize plain preprinted smoothing source
	standard topbin
	bond cardstock color envelope labels letterhead plain
	preprinted prepunched recycled rough transparency
    ]

#!End of [ hp8000 ]


# same feature set as the HP4000
# but no outbins, no media selection

# PRINTER hp2100 - HP LaserJet 2100 Series
[ hp2100 ]

## pcl paper source selection
##   use -Zsource=n
## 0 - current, 1 - tray 2 (first cassette), 2 - manual
## 3 - ????
## 4 - tray 1 (Multipurpose), 5 - tray 3 (second cassete)

pcl_intray1=\033&l4H
pcl_intray2=\033&l1H
pcl_intray3=\033&l5H

pcl_user_opts += [
    intray1 intray2 intray3
 ]

# PRINTER hp4050 - HP4050 Series
#
# Hewlett Packard 4050 Series
#
# Model number: C4253A (LaserJet 4050N)
#
# Printer short description: Letter/Legal/A4, PostScript Level3
#                            300/600/1200
#
# Input taken from
# HP4050_6.ppd
#
# Author: Wilfried.Gaensheimer@infineon.com
# wig20000124
#
# Status: untested
#
# Open Issues:
#
# Implemented commands:
#
# PJL:
#
# paper: A4,Letter,Legal
# resolution: 300/300dpi | 600/600dpi | 1200/1200dpi
# fastres
# bitsperpixel: ( 2 | 1 )
# economode: ( ON | OFF )
# retention: ( on | off ) | quickcopy private proof store
# 
# Postscript:
#
# collate: ( true | false )
# smoothing: ( true | false ) smoothingon smoothingoff
# pagesize/papersize/paper:
#        letter | executive | legal | a4 | a5 |
#        b5 | w612h935 | w558h774 |
#        env10 | envmonarch | envdl | envc5 | envb5
# oneup oneupl twoup twoupl fourup fourupl sixup sixupl
#         nineup nineupl sixteenup sixteenupl
# Watermarks:
#   wmtext wmfont wmsize wmangle
#   wmtextstylenarrow wmtextstylemedium wmtextstylewide wmtextstylehalo
#   wmallpages wmfirstpage
# tray|source: upper/tray1 | manualfeed/manual | middle/tray2
#    lower/tray3 | large/largecapacity/tray4
#    tray5 | tray6 | tray7 | tray8 | tray9 | tray10 | envelope
# media type: plain | transparency | preprinted
# media type:
#  plain | preprinted | letterhead | transparancy | prepunched |
#  labels | bond | recycled | mediacolor(*) | cardstock | rough
# (*) color in PPD
# promptuser
#   nearestsizeadjust
#   nearestsizenoadjust
#   policyletter
#   policya4
# scalepatterns
# halftone: halftoneenhanced | halfetonestandard
# duplex | sduplex/duplexshort/duplexshortedge | simplex | shortedge/tumble

# PRINTER % - HP4050 Series Printers
[ hp4050 ]

pjl_only=[
    COMMENT DEFAULT DINQUIRE ECHO ENTER EOJ
    FSAPPEND FSDIRLIST FSQUERY FSUPLOAD FSDELETE FSDOWNLOAD
    FSINIT FSMKDIR
    INFO INITIALIZE INQUIRE JOB OPMSG PJL RDYMSG
    RESET SET STMSG USTATUS USTATUSOFF
    COPIES
 ]

# use the HP4000 PCL - it is identical
tc=hp4000_pcl

# You can set retention to ON or OFF ... quickcopy, private and store are
# predefined ...
retention=OFF
pjl_retention=@PJL SET HOLD = \%s{retention}
#ExtractedKey: JCLRetention JCLRetentionQuickCopy/Quick Copy
pjl_quickcopy=@PJL SET HOLD = ON

#ExtractedKey: JCLRetention JCLRetentionProof/Proof and Hold
pjl_proof=@PJL SET HOLD = PROOF

#ExtractedKey: JCLRetention JCLRetentionPrivate/Private Job
pjl_private=
    @PJL SET HOLD = ON
    @PJL SET HOLDTYPE = PRIVATE

#ExtractedKey: JCLRetention JCLRetentionStore/Stored Job
pjl_store=@PJL SET HOLD = STORE

#ExtractedKey: JCLFastRes True/On
pjl_fastres=@PJL SET BITSPERPIXEL = 2
#ExtractedKey: JCLFastRes False/Off
pjl_fastresoff=@PJL SET BITSPERPIXEL = 1

# Set economode
economode=ON
pjl_economode=@PJL SET ECONOMODE = \%s{economode}
#ExtractedKey: JCLEconomode False/Highest Quality
pjl_economodeoff=@PJL SET ECONOMODE = OFF
#ExtractedKey: JCLEconomode True/Save Toner
#pjl_economode=
#    @PJL SET ECONOMODE = ON

pjl_user_opts=[
    retention quickcopy proof private store 
    fastres bitsperpixel economode economodeoff fastresoff
 ]


### PostScript


#ExtractedKey: HPNup OneUp/1 (Portrait)
ps_oneup=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
      end
    
      <<
      /EndPage {userdict begin
      userdict /HPwmText known HPwm /HPwmOn get and
        {initmatrix
         0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
         currentpagedevice /PageSize get aload pop 2 div exch 2 div exch translate
         HPwmAngle rotate /HPwmFont userdict /HPppScale known {HPwmSize HPppScale mul}{HPwmSize}ifelse selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch
           userdict /HPppScale known {HPwmSize HPppScale mul}{HPwmSize}ifelse .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
        2 eq {pop false}{pop HPwm begin HPwmEOP end} ifelse
        end } bind
      >> setpagedevice

#ExtractedKey: HPNup OneUpL/1 (Landscape)
ps_oneupl=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
      end
    
      <<
      /EndPage {userdict begin
      userdict /HPwmText known HPwm /HPwmOn get and
        {initmatrix
         0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
         currentpagedevice /PageSize get aload pop 2 div exch 2 div exch translate
         HPwmAngle 90 add rotate /HPwmFont userdict /HPppScale known {HPwmSize HPppScale mul}{HPwmSize}ifelse selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch
           userdict /HPppScale known {HPwmSize HPppScale mul}{HPwmSize}ifelse .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
        2 eq {pop false}{pop HPwm begin HPwmEOP end} ifelse
        end } bind
      >> setpagedevice

#ExtractedKey: HPNup TwoUp/2 (Portrait)
ps_twoup=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub HPwmPgHeight div dup HPwmShHeight 32 sub 2 div 
          HPwmPgWidth div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgHeight HPwmScale mul sub 2 div HPwmPgHeight HPwmScale mul add def
        /HPwmY1 HPwmShHeight HPwmPgWidth HPwmScale mul 2 mul sub 2 div def
        /HPwmY2 HPwmPgWidth HPwmScale mul HPwmY1 add def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        2 mod 0 eq { HPwmX1 HPwmY1 translate }{ HPwmX1 HPwmY2 translate } ifelse
        90 rotate HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {2 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 2 mod 1 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup TwoUpL/2 (Landscape)
ps_twoupl=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub HPwmPgHeight div dup HPwmShHeight 32 sub 2 div 
          HPwmPgWidth div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgHeight HPwmScale mul sub 2 div def
        /HPwmY1 HPwmShHeight HPwmPgWidth HPwmScale mul 2 mul sub 2 div HPwmShHeight exch sub def
        /HPwmY2 HPwmY1 HPwmPgWidth HPwmScale mul sub def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle 90 add rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        2 mod 0 eq { HPwmX1 HPwmY1 translate }{ HPwmX1 HPwmY2 translate } ifelse
        -90 rotate HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {2 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 2 mod 1 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup FourUp/4 (Portrait)
ps_fourup=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 2 div HPwmPgWidth div dup HPwmShHeight 32 sub 2 div 
          HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgWidth HPwmScale mul 2 mul sub 2 div def
        /HPwmX2 HPwmPgWidth HPwmScale mul HPwmX1 add def
        /HPwmY1 HPwmShHeight HPwmPgHeight HPwmScale mul 2 mul sub 2 div def
        /HPwmY2 HPwmPgHeight HPwmScale mul HPwmY1 add def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
    <<
      /BeginPage {userdict begin
        4 mod dup dup dup
        0 eq {HPwmX1 HPwmY2 translate} if
        1 eq {HPwmX2 HPwmY2 translate} if
        2 eq {HPwmX1 HPwmY1 translate} if
        3 eq {HPwmX2 HPwmY1 translate} if
        HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {4 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 4 mod 3 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
    >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup FourUpL/4 (Landscape)
ps_fourupl=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 2 div HPwmPgWidth div dup HPwmShHeight 32 sub 2 div 
          HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgWidth HPwmScale mul 2 mul sub 2 div def
        /HPwmX2 HPwmPgWidth HPwmScale mul HPwmX1 add def
        /HPwmY1 HPwmShHeight HPwmPgHeight HPwmScale mul 2 mul sub 2 div def
        /HPwmY2 HPwmPgHeight HPwmScale mul HPwmY1 add def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle 90 add rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        4 mod dup dup dup
        0 eq {HPwmX1 HPwmY1 translate} if
        1 eq {HPwmX1 HPwmY2 translate} if
        2 eq {HPwmX2 HPwmY1 translate} if
        3 eq {HPwmX2 HPwmY2 translate} if
        HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {4 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 4 mod 3 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup SixUp/6 (Portrait)
ps_sixup=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 2 div HPwmPgHeight div dup HPwmShHeight 32 sub 3 div 
          HPwmPgWidth div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgHeight HPwmScale mul 2 mul sub 2 div HPwmPgHeight HPwmScale mul add def
        /HPwmY1 HPwmShHeight HPwmPgWidth HPwmScale mul 3 mul sub 2 div def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        6 mod dup
        3 idiv HPwmPgHeight HPwmScale mul mul HPwmX1 add
        exch dup 3 idiv 3 mul sub HPwmPgWidth HPwmScale mul mul HPwmY1 add
        translate
        90 rotate HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {6 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 6 mod 5 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup SixUpL/6 (Landscape)
ps_sixupl=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 2 div HPwmPgHeight div dup HPwmShHeight 32 sub 3 div 
          HPwmPgWidth div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgHeight HPwmScale mul 2 mul sub 2 div def
        /HPwmY1 HPwmShHeight HPwmPgWidth HPwmScale mul 3 mul sub 2 div HPwmPgWidth HPwmScale mul add def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle 90 add rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        6 mod dup
        dup 2 idiv 2 mul sub HPwmPgHeight HPwmScale mul mul HPwmX1 add
        exch 2 idiv 2 exch sub HPwmPgWidth HPwmScale mul mul HPwmY1 add
        translate
        -90 rotate HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {6 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 6 mod 5 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup NineUp/9 (Portrait)
ps_nineuo=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 3 div HPwmPgWidth div dup HPwmShHeight 32 sub 3 div 
          HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgWidth HPwmScale mul 3 mul sub 2 div def
        /HPwmY1 HPwmShHeight HPwmPgHeight HPwmScale mul 3 mul sub 2 div def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        9 mod dup
        dup 3 idiv 3 mul sub HPwmPgWidth HPwmScale mul mul HPwmX1 add
        exch 3 idiv 2 exch sub HPwmPgHeight HPwmScale mul mul HPwmY1 add
        translate
        HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {9 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 9 mod 8 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup NineUpL/9 (Landscape)
ps_nineupl=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 3 div HPwmPgWidth div dup HPwmShHeight 32 sub 3 div 
          HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgWidth HPwmScale mul 3 mul sub 2 div def
        /HPwmY1 HPwmShHeight HPwmPgHeight HPwmScale mul 3 mul sub 2 div def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle 90 add rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        9 mod dup
        3 idiv HPwmPgWidth HPwmScale mul mul HPwmX1 add
        exch dup 3 idiv 3 mul sub HPwmPgHeight HPwmScale mul mul HPwmY1 add
        translate
        HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {9 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 9 mod 8 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup SixteenUp/16 (Portrait)
ps_sixteenup=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 4 div HPwmPgWidth div dup HPwmShHeight 32 sub 4 div 
          HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgWidth HPwmScale mul 4 mul sub 2 div def
        /HPwmY1 HPwmShHeight HPwmPgHeight HPwmScale mul 4 mul sub 2 div def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        16 mod dup
        dup 4 idiv 4 mul sub HPwmPgWidth HPwmScale mul mul HPwmX1 add
        exch 4 idiv 3 exch sub HPwmPgHeight HPwmScale mul mul HPwmY1 add
        translate
        HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {16 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 16 mod 15 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPNup SixteenUpL/16 (Landscape)
ps_sixteenupl=
    % Copyright (c) Hewlett-Packard Co 1997
      userdict begin
      userdict /HPwmPgWidth known not
        {/HPwmPgWidth currentpagedevice /PageSize get aload pop /HPwmPgHeight exch def def} if
      /HPwmShWidth currentpagedevice /PageSize get aload pop /HPwmShHeight exch def def
    
      /HPwmCTM {
        /HPwmScale HPwmShWidth 32 sub 4 div HPwmPgWidth div dup HPwmShHeight 32 sub 4 div 
          HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
        /HPwmX1 HPwmShWidth HPwmPgWidth HPwmScale mul 4 mul sub 2 div def
        /HPwmY1 HPwmShHeight HPwmPgHeight HPwmScale mul 4 mul sub 2 div def
      } bind def HPwmCTM
    
      true setglobal /HPwm 5 dict dup begin /HPwmOn true def /HPwmOdd true def end def false setglobal
    
      /restore {/PageSV where {pop dup PageSV eq 
        {restore HPwm begin HPwmMatrix setmatrix end}{restore}ifelse}{restore}ifelse} bind def
    
      userdict /HPwmAngle known not {/HPwmAngle 45 def} if
      userdict /HPwmSize known not {/HPwmSize 48 def} if
      userdict /HPwmLocation known not {/HPwmLocation true def} if
      userdict /HPwmStyle known not {/HPwmStyle .48 def} if
      userdict /HPwmDuplex known not {/HPwmDuplex 0 def} if
    
      /HPwmEOP {HPwmDuplex 0 eq {true}{HPwmDuplex 1 eq HPwmOdd eq dup not {erasepage}if
        true setglobal /HPwmOdd HPwmOdd not def false setglobal}ifelse} bind def
    
      /HPWaterMark {
      0 setgray 1 setlinewidth true setstrokeadjust 0 setlinejoin 0 setlinecap [] 0 setdash
      0 0 HPwmPgWidth HPwmPgHeight rectstroke
      userdict /HPwmText known HPwmOn and
        {HPwmPgWidth 2 div HPwmPgHeight 2 div translate
         HPwmAngle 90 add rotate /HPwmFont HPwmSize selectfont
         HPwmText stringwidth 2 div neg exch 2 div neg exch HPwmSize .25 mul sub moveto
         HPwmText false charpath userdict /HPwmStyle1 known
           {gsave 1 setgray HPwmStyle1 HPwmScale div HPwmStyle add setlinewidth stroke grestore} if
         0 setgray HPwmStyle setlinewidth stroke
         HPwmLocation not {true setglobal HPwm /HPwmOn false put false setglobal} if
        } if
      } bind def
      end
    
      <<
      /BeginPage {userdict begin
        16 mod dup
        4 idiv HPwmPgWidth HPwmScale mul mul HPwmX1 add
        exch dup 4 idiv 4 mul sub HPwmPgHeight HPwmScale mul mul HPwmY1 add
        translate
        HPwmScale HPwmScale scale
        HPwm begin true setglobal
          /HPwmMatrix matrix currentmatrix def
        false setglobal end
        end } bind
     
      /EndPage {userdict begin
        HPwm begin HPwmMatrix setmatrix
        2 eq {16 mod 0 ne {HPwmEOP}{false}ifelse}{HPWaterMark 16 mod 15 eq {HPwmEOP}{false}ifelse} ifelse end
        end } bind
      >> setpagedevice
    
    /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
      HPwmCTM <</PageSize [HPwmShWidth HPwmShHeight] /ImagingBBox null>>
      userdict /HPwmSPD known {HPwmSPD}{setpagedevice} ifelse}if end} bind def

#ExtractedKey: HPwmText CompanyConfidential/Company Confidential
#ExtractedKey: HPwmText CompanyProprietary/Company Proprietary
#ExtractedKey: HPwmText CompanyPrivate/Company Private
#ExtractedKey: HPwmText Confidential/Confidential
#ExtractedKey: HPwmText Copy/Copy
#ExtractedKey: HPwmText Copyright/Copyright
#ExtractedKey: HPwmText Draft/Draft
#ExtractedKey: HPwmText FileCopy/File Copy
#ExtractedKey: HPwmText Final/Final
#ExtractedKey: HPwmText ForInternalUse/For Internal Use Only
#ExtractedKey: HPwmText Preliminary/Preliminary
#ExtractedKey: HPwmText Proof/Proof
#ExtractedKey: HPwmText ReviewCopy/Review Copy
#ExtractedKey: HPwmText Sample/Sample
#ExtractedKey: HPwmText TopSecret/Top Secret
#ExtractedKey: HPwmText Urgent/Urgent
wmtest=Company Confidential
ps_wmtext=
    userdict /HPwmText (\%s{wmtest}) put

#ExtractedKey: HPwmFont CourierB/Courier Bold
#ExtractedKey: HPwmFont TimesB/Times Bold
#ExtractedKey: HPwmFont HelveticaB/Helvetica Bold
wmfont=Courier-Bold
ps_wmfont=
      /\%s{wmfont} findfont dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def currentdict 
      end
      /HPwmFont exch definefont pop

#ExtractedKey: HPwmFontSize pt24/24 Points
#ExtractedKey: HPwmFontSize pt30/30 Points
#ExtractedKey: HPwmFontSize pt36/36 Points
#ExtractedKey: HPwmFontSize pt42/42 Points
#ExtractedKey: HPwmFontSize pt48/48 Points
#ExtractedKey: HPwmFontSize pt54/54 Points
#ExtractedKey: HPwmFontSize pt60/60 Points
#ExtractedKey: HPwmFontSize pt66/66 Points
#ExtractedKey: HPwmFontSize pt72/72 Points
#ExtractedKey: HPwmFontSize pt78/78 Points
#ExtractedKey: HPwmFontSize pt84/84 Points
#ExtractedKey: HPwmFontSize pt90/90 Points
wmsize=24
ps_wmsize=
    userdict /HPwmSize \%d{wmsize} put

#ExtractedKey: HPwmTextAngle Deg90/90 Degrees
#ExtractedKey: HPwmTextAngle Deg75/75 Degrees
#ExtractedKey: HPwmTextAngle Deg60/60 Degrees
#ExtractedKey: HPwmTextAngle Deg45/45 Degrees
#ExtractedKey: HPwmTextAngle Deg30/30 Degrees
#ExtractedKey: HPwmTextAngle Deg15/15 Degrees
#ExtractedKey: HPwmTextAngle Deg0/0 Degrees
#ExtractedKey: HPwmTextAngle DegN15/-15 Degrees
#ExtractedKey: HPwmTextAngle DegN30/-30 Degrees
#ExtractedKey: HPwmTextAngle DegN45/-45 Degrees
#ExtractedKey: HPwmTextAngle DegN60/-60 Degrees
#ExtractedKey: HPwmTextAngle DegN75/-75 Degrees
#ExtractedKey: HPwmTextAngle DegN90/-90 Degrees
wmangle=90
ps_wmangle=
    userdict /HPwmAngle \%d{wmangle} put

#ExtractedKey: HPwmTextStyle Narrow/Narrow Outline
ps_wmtextstylenarrow=
    userdict /HPwmStyle .24 put

#ExtractedKey: HPwmTextStyle Medium/Medium Outline
ps_wmtextstylemedium=
    userdict /HPwmStyle .48 put

#ExtractedKey: HPwmTextStyle Wide/Wide Outline
ps_wmtextstylewide=
    userdict /HPwmStyle .96 put

#ExtractedKey: HPwmTextStyle Halo/Wide Halo Outline
ps_wmtextstylehalo=
    userdict /HPwmStyle .96 put userdict /HPwmStyle1 .84 put

#ExtractedKey: HPwmLocation True/All Pages
ps_wmallpages=
    userdict /HPwmLocation true put

#ExtractedKey: HPwmLocation False/First Page Only
ps_wmfirstpage=
    userdict /HPwmLocation false put

#ExtractedKey: HPCollate True/On (turn off in application)
collate=true
ps_collate=<</Collate \%s{collate}>> setpagedevice

#ExtractedKey: HPCollate False/Off
# ps_collateoff=
    <</Collate false>> setpagedevice

#ExtractedKey: Smoothing True/On
ps_smoothing=[ smoothingon ]
ps_nosmoothing=[ smoothingoff ]
ps_smoothingon=
      << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 2 /Type 8 >>
      >> setpagedevice

#ExtractedKey: Smoothing False/Off
ps_smoothingoff=
      << /PostRenderingEnhance true /PostRenderingEnhanceDetails << /REValue 0 /Type 8 >>
      >> setpagedevice

#
# Paper size selection ...
#

#ExtractedKey: PageSize Letter/Letter
ps_letter=<</PageSize [612 792] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize Executive/Executive
ps_executive=<</PageSize [522 756] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize Legal/Legal
ps_legal=<</PageSize [612 1008] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize A4/A4
ps_a4=<</PageSize [595 842] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize A5/A5
ps_a5=<</PageSize [420 595] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize B5/B5 (JIS)
ps_b5=<</PageSize [516 729] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize w612h935/Executive (JIS)
ps_w612h935=<</PageSize [612 935] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize w558h774/16K
ps_w558h774=<</PageSize [558 774] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize Env10/Envelope #10
ps_env10=<</PageSize [297 684] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize EnvMonarch/Envelope Monarch
ps_envmonarch=<</PageSize [279 540] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize EnvDL/Envelope DL
ps_envdl=<</PageSize [312 624] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize EnvC5/Envelope C5
ps_envc5=<</PageSize [459 649] /ImagingBBox null>> setpagedevice
#ExtractedKey: PageSize EnvISOB5/Envelope B5
ps_envb5=<</PageSize [499 709] /ImagingBBox null>> setpagedevice

#
# source ...
#
    
#ExtractedKey: InputSlot Upper/ Tray 1
ps_inupper=[ intray1 ]
ps_intray1=<</ManualFeed false /MediaPosition 3>> setpagedevice
#ExtractedKey: InputSlot ManualFeed/ Tray 1 (Manual)
ps_manualfeed=[ manual ]
ps_manual=<</ManualFeed true /MediaPosition 3>> setpagedevice
#ExtractedKey: InputSlot Middle/ Tray 2
ps_inmiddle=[ intray2 ]
ps_intray2=<</ManualFeed false /MediaPosition 0>> setpagedevice
#ExtractedKey: InputSlot Lower/ Tray 3
ps_inlower=[ intray3 ]
ps_intray3=currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 1>> setpagedevice}
      {currentpagedevice /InputAttributes get 5 known
        {<</ManualFeed false /MediaPosition 5>> setpagedevice}if}ifelse
#ExtractedKey: InputSlot LargeCapacity/ Tray 4
ps_inlarge=[ intray4 ]
ps_inlargecapacity=[ intray4 ]
ps_intray4=currentpagedevice /InputAttributes get 4 known
      {<</ManualFeed false /MediaPosition 4>> setpagedevice}
      {currentpagedevice /InputAttributes get 1 known
        {<</ManualFeed false /MediaPosition 5>> setpagedevice}
        {<</ManualFeed false /MediaPosition 6>> setpagedevice}ifelse}ifelse

#ExtractedKey: InputSlot Tray5/ Tray 5
ps_intray5=currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 6>> setpagedevice}
      {<</ManualFeed false /MediaPosition 7>> setpagedevice}ifelse

#ExtractedKey: InputSlot Tray6/ Tray 6
ps_intray6=currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 7>> setpagedevice}
      {<</ManualFeed false /MediaPosition 8>> setpagedevice}ifelse

#ExtractedKey: InputSlot Tray7/ Tray 7
ps_intray7=currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 8>> setpagedevice}
      {<</ManualFeed false /MediaPosition 9>> setpagedevice}ifelse

#ExtractedKey: InputSlot Tray8/ Tray 8
ps_intray8=
    currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 9>> setpagedevice}
      {<</ManualFeed false /MediaPosition 10>> setpagedevice}ifelse

#ExtractedKey: InputSlot Tray9/ Tray 9
ps_intray9=
    currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 10>> setpagedevice}
      {<</ManualFeed false /MediaPosition 11>> setpagedevice}ifelse

#ExtractedKey: InputSlot Tray10/ Tray 10
ps_intray10=
    currentpagedevice /InputAttributes get 1 known
      {<</ManualFeed false /MediaPosition 11>> setpagedevice}
      {<</ManualFeed false /MediaPosition 12>> setpagedevice}ifelse

#ExtractedKey: InputSlot Envelope/ Envelope Feeder
ps_envelope=
    <</ManualFeed false /MediaPosition 2>> setpagedevice

#
# Media type ...
#
#ExtractedKey: InputSlot Plain/Plain
ps_plain=<</ManualFeed false /MediaType (Plain)>> setpagedevice

#ExtractedKey: InputSlot Preprinted/Preprinted
ps_preprinted=<</ManualFeed false /MediaType (Preprinted)>> setpagedevice

#ExtractedKey: InputSlot Letterhead/Letterhead
ps_letterhead=<</ManualFeed false /MediaType (Letterhead)>> setpagedevice

#ExtractedKey: InputSlot Transparency/Transparency
ps_transparancy=<</ManualFeed false /MediaType (Transparency)>> setpagedevice

#ExtractedKey: InputSlot Prepunched/Prepunched
ps_prepunched=<</ManualFeed false /MediaType (Prepunched)>> setpagedevice

#ExtractedKey: InputSlot Labels/Labels
ps_labels=<</ManualFeed false /MediaType (Labels)>> setpagedevice

#ExtractedKey: InputSlot Bond/Bond
ps_bond=<</ManualFeed false /MediaType (Bond)>> setpagedevice

#ExtractedKey: InputSlot Recycled/Recycled
ps_recycled=<</ManualFeed false /MediaType (Recycled)>> setpagedevice

#ExtractedKey: InputSlot Color/Color
ps_mediacolor=<</ManualFeed false /MediaType (Color)>> setpagedevice

#ExtractedKey: InputSlot Cardstock/Card Stock
ps_cardstock=<</ManualFeed false /MediaType (Card Stock)>> setpagedevice

#ExtractedKey: InputSlot Rough/Rough
ps_rough=<</ManualFeed false /MediaType (Rough)>> setpagedevice

#ExtractedKey: HPPaperPolicy PromptUser/Prompt User
ps_promptuser=<</DeferredMediaSelection true>> setpagedevice

#ExtractedKey: HPPaperPolicy NearestSizeAdjust/Nearest Size and Scale
ps_nearestsizeadjust=<</DeferredMediaSelection false /Policies << /PageSize 3 >> >> setpagedevice
#ExtractedKey: HPPaperPolicy NearestSizeNoAdjust/Nearest Size and Crop
ps_nearestsizenoadjust=<</DeferredMediaSelection false /Policies << /PageSize 5 >> >> setpagedevice

#ExtractedKey: HPPaperPolicy Letter/Letter
ps_policyletter=
    userdict begin
      /HPppX1 0 def
      /HPppY1 0 def
      /HPppScale 1 def
    
      <</DeferredMediaSelection true
        /BeginPage {pop userdict begin HPppX1 HPppY1 translate HPppScale HPppScale scale end} bind>> setpagedevice
    
      /HPwmSPD {setpagedevice} bind def
      /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
          /HPppScale 612 HPwmPgWidth div dup 792 HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
          HPppScale 1 gt {/HPppScale 1 def}if
          /HPppX1 612 HPwmPgWidth HPppScale mul sub 2 div def
          /HPppY1 792 HPwmPgHeight HPppScale mul sub 2 div def
          <</PageSize [612 792] /ImagingBBox null>> setpagedevice}{setpagedevice}ifelse end} bind def
    end

#ExtractedKey: HPPaperPolicy A4/A4
ps_policya4=
    userdict begin
      /HPppX1 0 def
      /HPppY1 0 def
      /HPppScale 1 def
    
      <</DeferredMediaSelection true
        /BeginPage {pop userdict begin HPppX1 HPppY1 translate HPppScale HPppScale scale end} bind>> setpagedevice
    
      /HPwmSPD {setpagedevice} bind def
      /setpagedevice {userdict begin dup /PageSize known {/HPwmPgWidth exch /PageSize get aload pop /HPwmPgHeight exch def def
          /HPppScale 595 HPwmPgWidth div dup 842 HPwmPgHeight div dup 3 1 roll lt {pop} {exch pop} ifelse def
          HPppScale 1 gt {/HPppScale 1 def}if
          /HPppX1 595 HPwmPgWidth HPppScale mul sub 2 div def
          /HPppY1 842 HPwmPgHeight HPppScale mul sub 2 div def
          <</PageSize [595 842] /ImagingBBox null>> setpagedevice}{setpagedevice}ifelse end} bind def
    end

#ExtractedKey: HPScalePatterns Scale/On
ps_scalepatterns=
    /GDIBWPatternDict 18 dict def
    /dtransform {GDIBWPatternDict /Width known {currentpagedevice /HWResolution get 0 get
    150 div mul exch currentpagedevice /HWResolution get 0 get 150 div mul exch dtransform}{dtransform}ifelse} bind def

#ExtractedKey: HPHalftone Enhanced/Enhanced
ps_halftoneenhanced=
       << /Install {
         currentpagedevice /HWResolution get
         dup 0 get 600 eq exch 1 get 600 eq and
         { /EnhancedColorRendering600 } { /EnhancedColorRendering } ifelse
         /ColorRendering findresource setcolorrendering
         /EnhancedHalftone /Halftone findresource sethalftone
         { } settransfer false setstrokeadjust
       }
       >> setpagedevice
       currentpagedevice /HWResolution get dup 0 get 600 eq exch 1 get 600 eq and
       {
           << /PostRenderingEnhance true
                /PostRenderingEnhanceDetails << /REValue 0 /Type 8 >>
           >> setpagedevice
       } if
       /setscreen { pop pop pop } def
       /setcolorscreen { pop pop pop pop pop pop pop pop pop pop pop pop } def
       /sethalftone { pop } def 


#ExtractedKey: HPHalftone Standard/Standard
ps_halftonestandard=
       << /Install {
         currentpagedevice /HWResolution get
         dup 0 get 600 eq exch 1 get 600 eq and dup
         currentpagedevice /PostRenderingEnhance get
         currentpagedevice /PostRenderingEnhanceDetails get /REValue get 0 ne and
         { {/DefaultColorRenderingRE600} {/DefaultColorRenderingRE} ifelse}
         { {/DefaultColorRendering600} {/DefaultColorRendering} ifelse} ifelse
         /ColorRendering findresource setcolorrendering
         { /DefaultHalftone600 } {/DefaultHalftone} ifelse
         /Halftone findresource sethalftone
         {} settransfer false setstrokeadjust
       } >> setpagedevice
       currentpagedevice /HWResolution get dup 0 get 600 eq exch 1 get 600 eq and
       {
         << /PostRenderingEnhance true /PostRenderingEnhanceDetails
         << /REValue 0 /Type 8 >> >> setpagedevice
       } if


#
# Duplex control ..
#

#ExtractedKey: Duplex DuplexNoTumble/Flip on Long Edge (Standard)
ps_duplex=<</Duplex true /Tumble false>> setpagedevice
ps_lduplex=[ duplex ]

#ExtractedKey: Duplex DuplexTumble/Flip on Short Edge
ps_duplexshort=<</Duplex true /Tumble true>> setpagedevice
ps_sduplex=[ duplexshort ]
ps_duplexshortedge=[ duplexshort ]

#ExtractedKey: Duplex None/Off (1-Sided)
ps_simplex=<</Duplex false>> setpagedevice

ps_tumble=<</Tumble true>> setpagedevice
ps_shortedge=[ tumble ]

ps_user_opts += [
	a4 a5 b5 bond cardstock collate duplex duplexshort duplexshortedge env10
	envb5 envc5 envdl envelope envmonarch executive fourup fourupl halftoneenhanced
	halftonestandard inlarge inlargecapacity inlower inmiddle intray1 intray10
	intray2 intray3 intray4 intray5 intray6 intray7 intray8 intray9
	inupper labels lduplex legal letter letterhead manual manualfeed mediacolor
	nearestsizeadjust nearestsizenoadjust nineuo nineupl nosmoothing oneup
	oneupl plain policya4 policyletter preprinted prepunched promptuser recycled rough
	scalepatterns sduplex shortedge simplex sixteenup sixteenupl sixup sixupl smoothing
	smoothingoff smoothingon transparancy tumble twoup twoupl w558h774 w612h935
	wmallpages wmangle wmfirstpage wmfont wmsize wmtext wmtextstylehalo wmtextstylemedium
	wmtextstylenarrow wmtextstylewide
    ]
#
#!End of [ hp4050 ]

##
##  QMS Printers do not seem to return status or other information
##  you may need to configure them to connect on port 35
## printcap 
##  lp:ifhp=model=qms1725,dev=qms.printer.ip.addr%35
##    :lp=/dev/null
##    :if=..../ifhp
##

# PRINTER qms1725 - QMS 1725, uses appsocket, no status, PostScript only
[ qms1725 ]
appsocket
# close_connection
status@
pjl@
pcl@
ps
text@

file_output_match = [
  *postscript*       ps
  *text*             ps      \%s{a2ps_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
  ]

#*DefaultDuplex: None
#*Duplex None: statusdict begin false setduplexmode false settumble end
ps_simplex=statusdict begin false setduplexmode false settumble end
#*Duplex DuplexNoTumble: statusdict begin true setduplexmode false settumble end
ps_duplex=statusdict begin true setduplexmode false settumble end
ps_lduplex=[ duplex ]
#*Duplex DuplexTumble: statusdict begin true setduplexmode true settumble end
ps_duplexshort=statusdict begin true setduplexmode true settumble end
ps_sduplex=[ duplexshort ]

ps_tumble=statusdict begin true settumble end
ps_shortedge=[ tumble ]

#*InputSlot Upper: statusdict begin 1 setpapertray end
ps_inupper=statusdict begin 1 setpapertray end
#*InputSlot Lower: statusdict begin 2 setpapertray end
ps_inlower=statusdict begin 2 setpapertray end
#*InputSlot Envelope: statusdict begin 3 setpapertray end
ps_envelope=statusdict begin 3 setpapertray end

ps_manual=   1 dict dup /ManualFeed true put setpagedevice

#*OutputBin Upper: statusdict begin 1 setoutputray end
#*OutputBin Back: statusdict begin 2 setoutputtray end

ps_outupper= statusdict begin 1 setoutputray end
ps_outlower= statusdict begin 2 setoutputtray end

# QMS 2025 appears to be HP compatible
# QMS 860 has same tray as QMS2025
# PRINTER % - QMS Laser Printer {/qms(.*)/QMS $1/}, appsocket, no status, PostScript and PCL
[ qms2025 qms860 qms2060 ]
appsocket
# close_connection
status@
pjl@
pcl
ps
text@
#*PageSize Letter: statusdict begin lettertray end
ps_letter=statusdict begin lettertray end
#*PageSize Legal: statusdict begin legaltray end
ps_legal=statusdict begin legaltray end
#*PageSize Tabloid: statusdict begin 11x17tray end
ps_ledger=statusdict begin 11x17tray end
#*PageSize Executive: statusdict begin executivetray end
ps_executive=statusdict begin executivetray end
#*PageSize A3: statusdict begin a3tray end
ps_a3=statusdict begin a3tray end
#*PageSize A4: statusdict begin a4tray end
ps_a4=statusdict begin a4tray end
#*PageSize A5: statusdict begin a5tray end
ps_a5=statusdict begin a5tray end
#*PageSize B4: statusdict begin b4tray end
ps_b4=statusdict begin b4tray end
#*PageSize B5: statusdict begin b5tray end
ps_b5=statusdict begin b5tray end
#*PageSize B6: statusdict begin b6tray end
ps_b6=statusdict begin b6tray end


## Tektronix Color Printers
##  uses 'appsocket' protcol
##   TCP port 9100
##    receives job status
##
## printcap entry:
##  lp:cm=Phaser
##    :lp=/dev/null
##    :ifhp=model=phaser,dev=10.0.0.1%9100
##    :if=/usr/lib/lpfilters/ifhp
##
##  OR
##
##  lp:cm=Phaser
##    :lp=/dev/null
##    :if=/usr/lib/lpfilters/ifhp -Tmodel=phaser,dev=10.0.0.1%9100
##
##  If you insist on banner pages or need powerful accounting
##  and need an OF filter
##  then add (respectively to the above examples):
##
##    :of=/usr/lib/lpfilters/ifhp
##  OR
##    :of=/usr/lib/lpfilters/ifhp -Tmodel=phaser,dev=10.0.0.1%9100
##  

# PRINTER % - Generic Tektronics Phaser Color Printer, appsocket, PostScript only
[ phaser ]
appsocket
# close_connection
pjl@
pcl@
ps
sync@

file_output_match = [
  *postscript*       ps
  *text*             ps      \%s{a2ps_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
  ]

ps_pagecount_code=%!
  false 0 startjob pop
  (%%[ pagecount: )print statusdict /pagecount get exec (                )cvs
   print
  ( ]%% )= flush
ps_inupper=
  product (Phaser 2) anchorsearch
  { pop pop 2 dict begin
     /InputAttributes 1 dict begin /Priority [0] def currentdict
  end def }
  {  (Phaser 440) anchorsearch
     { pop pop 3 dict begin
         /MediaType (Upper Tray) def
        /MediaColor null def }
    { pop 4 dict begin
        /MediaPosition 0 def
        /MediaType null def
        /ManualFeed false def } ifelse
  } ifelse
  /TraySwitch false def
  currentdict end setpagedevice

ps_transparency=
  mark
  {
    4 dict begin
      /MediaPosition null def
      /MediaType (Transparency) def
      /TraySwitch true def
      /ManualFeed false def
      currentdict end setpagedevice
  } stopped cleartomark

# PRINTER % - Tektronics Phaser {/phaser(.*)/$1/} Color Printer, appsocket, PostScript only
[ phaser360 phaser740 phaser850 ]

# use the generic phaser definitions
tc=phaser
# close_connection
# The following is required for transparency selection on
# the Phaser 360, Phaser 740, and Phaser850:

ps_transparency=<< /MediaPosition null 
                   /MediaClass (Transparency) 
                   /TraySwitch true 
                   /ManualFeed false 
                >> setpagedevice

# PRINTER % - Lexmark 4039, Postscript only
[ lexmark4039 ]
pcl@
pjl@
ps
ps_init=[ sync ]
ps_sync=
  serverdict begin 0 exitserver
  statusdict begin false setenginesync end
ps_async=
  serverdict begin 0 exitserver
  statusdict begin true setenginesync end

file_output_match = [
  *postscript*       ps
  *text*             ps      \%s{a2ps_converter}
  *gzip_compressed*  filter  \%s{gzip_decompress}
  ]

# PRINTER % - Lexmark Optra e312, Postscript, PCL and PJL
[ lexmark_optra_e312 ]

# Lexmark Optra e312 IFHP printer configuration
# Contribued by:
#   Lars Kellogg-Stedman <lars@larsshack.org>
#   Fri, 21 Jul 2000 23:55:14 -0400 (EDT)
## You may want to add the following xxx-to-ps converters
##  file_output_match += [
##        *gif*                   filter  \%s{gif_converter}
##        *jpeg*                  filter  \%s{jpeg_converter}
##        *tiff*                  filter  \%s{tiff_converter}
##        *gzip_compressed*       filter  \%s{gzip_decompress}
##        *postscript*            ps
##        *roff*                  ps      \%s{troff_converter}
##        *text*                  ps      \%s{a2ps_converter}
##        *pdf*                   ps      \%s{pdf_converter}
##        *dvi*                   ps      \%s{dvi_converter}
##        *pnm*                   ps      \%s{pnm_converter}
##        *ppm*                   ps      \%s{pnm_converter}
##  ]
##

## The lexmark supports both pcl and pjl in addition to postscript.
pcl
pjl

pjl_user_opts += [
		density economode noeconomode picturegrade nopicturegrade
	]

pjl_density = @PJL SET DENSITY = \%s{density}<OA>

pjl_enconomode = @PJL SET ECONOMODE = ON<0A>
pjl_noenconomode = @PJL SET ECONOMODE = OFF<0A>

pjl_picturegrade = @PJL SET LPARM:POSTSCRIPT LPICTUREGRADE = ON<0A>
pjl_nopicturegrade = @PJL SET LPARM:POSTSCRIPT LPICTUREGRADE = OFF<0A>

ps_user_opts += [
		smoothing nosmoothing enhance noenhance
		300x300 600x600 plain cardstock transparency
		labels bond letterhead preprinted color envelope
		custom1 custom2 custom3 custom4 custom5 custom6
		lxcollate nolxcollate letter legal b5 a4
		executive a5 universal monarch c9 comm10 dl c5
		isob5 other autoselect intray1 manual
	]

ps_smoothing = %% Turn smoothing ON
	<< /PostRenderingEnhanceDetails << /REValue 2 >> >> setpagedevice
ps_nosmoothing = %% Turn smoothing OFF
	<< /PostRenderingEnhanceDetails << /REValue 0 >> >> setpagedevice

ps_enhance = %% Turn imageenhance ON
	1 dict dup /DeviceRenderingInfo 1 dict dup /ImageEnhancement 1 put put setpagedevice
ps_noenhance = %% Turn imageenhance OFF
	1 dict dup /DeviceRenderingInfo 1 dict dup /ImageEnhancement 0 put put setpagedevice

## resolution
ps_300x300 = %% Set resolution to 300x300
	<< /HWResolution [300 300] >> setpagedevice
ps_600x600 = %% Set resolution to 600x600
	<< /HWResolution [600 600] >> setpagedevice

ps_lxcollate = %% Turn lxcollate ON
	<< /Collate true >> setpagedevice
ps_nolxcollate = %% Turn lxcollate OFF
	<< /Collate false >> setpagedevice

## media types
ps_plain = << /MediaType (Plain) /Policies << /MediaType 2 >> >> setpagedevice
ps_cardstock = << /MediaType (Card Stock) /Policies << /MediaType 2 >> >> setpagedevice
ps_transparency = << /MediaType (Transparency) /Policies << /MediaType 2 >> >> setpagedevice
ps_labels = << /MediaType (Labels) /Policies << /MediaType 2 >> >> setpagedevice
ps_bond = << /MediaType (Bond) /Policies << /MediaType 2 >> >> setpagedevice
ps_letterhead = << /MediaType (Letterhead) /Policies << /MediaType 2 >> >> setpagedevice
ps_preprinted = << /MediaType (Preprinted) /Policies << /MediaType 2 >> >> setpagedevice
ps_color = << /MediaType (Color) /Policies << /MediaType 2 >> >> setpagedevice
ps_envelope = << /MediaType (Envelope) /Policies << /MediaType 2 >> >> setpagedevice
ps_custom1 = << /MediaType (Custom Type 1) /Policies << /MediaType 2 >> >> setpagedevice
ps_custom2 = << /MediaType (Custom Type 2) /Policies << /MediaType 2 >> >> setpagedevice
ps_custom3 = << /MediaType (Custom Type 3) /Policies << /MediaType 2 >> >> setpagedevice
ps_custom4 = << /MediaType (Custom Type 4) /Policies << /MediaType 2 >> >> setpagedevice
ps_custom5 = << /MediaType (Custom Type 5) /Policies << /MediaType 2 >> >> setpagedevice
ps_custom6 = << /MediaType (Custom Type 6) /Policies << /MediaType 2 >> >> setpagedevice

ps_letter = %% Letter
	2 dict dup /PageSize [612 792]  put dup /ImagingBBox null put setpagedevice
ps_legal = %% Legal
	2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice
ps_b5 = %% B5
	2 dict dup /PageSize [516 729]  put dup /ImagingBBox null put setpagedevice
ps_a4 = %% A4
	2 dict dup /PageSize [595 842]  put dup /ImagingBBox null put setpagedevice
ps_executive = %% Executive
	2 dict dup /PageSize [522 756]  put dup /ImagingBBox null put setpagedevice
ps_a5 = %% A5
	2 dict dup /PageSize [420 595]  put dup /ImagingBBox null put setpagedevice
ps_universal = %% Universal
	2 dict dup /PageSize [612 1008]  put dup /ImagingBBox null put setpagedevice
ps_monarch = %% Monarch Envelope
	2 dict dup /PageSize [279 540]  put dup /ImagingBBox null put setpagedevice
ps_c9 = %% C9 Envelope
	2 dict dup /PageSize [279 639]  put dup /ImagingBBox null put setpagedevice
ps_comm10 = %% comm10 (Number 10 Envlope?)
	2 dict dup /PageSize [297 684]  put dup /ImagingBBox null put setpagedevice
ps_dl = %% DL Envelope
	2 dict dup /PageSize [312 624]  put dup /ImagingBBox null put setpagedevice
ps_c5 = %% C5 Envelope
	2 dict dup /PageSize [459 649]  put dup /ImagingBBox null put setpagedevice
ps_isob5 = %% ISO B5 Envelope
	2 dict dup /PageSize [499 708]  put dup /ImagingBBox null put setpagedevice
ps_other = %% Other Envelope (8.5 x 14)
	2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice

## autoselect
ps_autoselect = %% Autoselect input tray
	1 dict dup /Policies 1 dict dup /PageSize 2 put put setpagedevice

ps_intray1 = %% Select input tray 1
	1 dict dup /ManualFeed false put setpagedevice
	1 dict dup /MediaPosition null put setpagedevice
	currentpagedevice /InputAttributes get 0 get setpagedevice
	1 dict dup /InputAttributes 1 dict dup /Priority [0] put put setpagedevice
	1 dict dup /Policies 1 dict dup /PageSize 7 put put setpagedevice

## manual
ps_manual = %% Select manual input tray
	1 dict dup /ManualFeed true  put setpagedevice
	1 dict dup /MediaPosition null put setpagedevice
	1 dict dup /Policies 1 dict dup /PageSize 2 put put setpagedevice




#####
#####  GhostScript Rasterization Printer Entries
#####

# PRINTER gs_bj10 - Canon BubbleJet BJ10e 
# PRINTER gs_bj10 - Canon BubbleJet BJ20 
[ gs_bj10 ]
tc=ghostscript
gs_device=bj10
gs_options=

# PRINTER gs_bj200 - Canon BubbleJet BJ200 
# PRINTER gs_bj200 - Canon BubbleJet BJC-210 B/W only 
# PRINTER gs_bj200 - Canon BubbleJet BJC-240 B/W only 
# PRINTER gs_bj200 - Canon BubbleJet BJC-250 B/W only 
# PRINTER gs_bj200 - Canon BubbleJet BJC-70 B/W only 
[ gs_bj200 ]
tc=ghostscript
gs_device=bj200
gs_options=

# PRINTER gs_bjc600 - Canon BubbleJet BJC-600 
# PRINTER gs_bjc600 - Canon BubbleJet BJC-610
# PRINTER gs_bjc600 - Canon BJC-50
# PRINTER gs_bjc600 - Canon BJC-70 
# PRINTER gs_bjc600 - Canon BJC-80 
# PRINTER gs_bjc600 - Canon BJC-210 Color only
# PRINTER gs_bjc600 - Canon BJC-240 Color only
# PRINTER gs_bjc600 - Canon BJC-250 
# PRINTER gs_bjc600 - Canon BubbleJet BJC-1000
# PRINTER gs_bjc600 - Canon BubbleJet BJC-2000
# PRINTER gs_bjc600 - Canon BubbleJet BJC-4000 
# PRINTER gs_bjc600 - Canon BubbleJet BJC-4100 B/W only
# PRINTER gs_bjc600 - Canon BubbleJet BJC-4200
# PRINTER gs_bjc600 - Canon BubbleJet BJC-4300
# PRINTER gs_bjc600 - Canon BubbleJet BJC-4550 
# PRINTER gs_bjc600 - Canon BubbleJet BJC-6000
# PRINTER gs_bjc600 - Canon MultiPASS C2500 color printer/fax/copier 
[ gs_bjc600 ]
tc=ghostscript
gs_device=bjc600
gs_options=

# PRINTER gs_bjc800 - Canon BubbleJet BJC-800 
# PRINTER gs_bjc800 - Canon BubbleJet BJC-7000 Color. 
# PRINTER gs_bjc800 - Canon BubbleJet BJC-4300 Color
# PRINTER gs_bjc800 - Canon BubbleJet BJC-4650 
[ gs_bjc800 ]
tc=ghostscript
gs_device=bjc800
gs_options=

# PRINTER gs_deskjet - HP DeskJet 
# PRINTER gs_deskjet - HP DeskJet Plus 
[ gs_deskjet ]
tc=pcl_gs
gs_device=deskjet
gs_options=

# PRINTER gs_djet500 - HP DeskJet 500 B/W
# PRINTER gs_djet500 - HP DeskJet Portable B/W
# PRINTER gs_djet500 - HP OfficeJet 590 B/W
[ gs_djet500 ]
tc=pcl_gs
gs_device=djet500
gs_options=

# PRINTER gs_cdj500 - HP DeskJet 400
# PRINTER gs_cdj500 - HP DeskJet 500C 
# PRINTER gs_cdj500 - HP DeskJet 540C 
# PRINTER gs_cdj500 - HP DeskJet 690C
# PRINTER gs_cdj500 - HP DeskJet 693C
[ gs_cdj500 ]
tc=pcl_gs
gs_device=cdj500
gs_options=

# PRINTER gs_cdj550 - HP DeskJet 550C 
# PRINTER gs_cdj550 - HP DeskJet 560C 
# PRINTER gs_cdj550 - HP DeskJet 600
# PRINTER gs_cdj550 - HP DeskJet 660C 
# PRINTER gs_cdj550 - HP DeskJet 660C 
# PRINTER gs_cdj550 - HP DeskJet 682C
# PRINTER gs_cdj550 - HP DeskJet 683C
# PRINTER gs_cdj550 - HP DeskJet 693C 
# PRINTER gs_cdj550 - HP DeskJet 694C 
# PRINTER gs_cdj550 - HP DeskJet 690C 
# PRINTER gs_cdj550 - HP DeskJet 692C 
# PRINTER gs_cdj550 - HP DeskJet 693C 
# PRINTER gs_cdj550 - HP DeskJet 694C 
# PRINTER gs_cdj550 - HP DeskJet 695C 
# PRINTER gs_cdj550 - HP DeskJet 850 
# PRINTER gs_cdj550 - HP DeskJet 870Cse 
# PRINTER gs_cdj550 - HP DeskJet 895Cxi
# PRINTER gs_cdj550 - HP DeskJet 970 
# PRINTER gs_cdj550 - HP OfficeJet 590 
# PRINTER gs_cdj550 - Olivetti jp450 
# PRINTER gs_cdj550 - Xerox XJ6C 
[ gs_cdj550 ]
tc=pcl_gs
gs_device=cdj550
gs_options=

# PRINTER gs_cdj850 - HP DeskJet 850 
# PRINTER gs_cdj850 - HP DeskJet 855 
# PRINTER gs_cdj850 - HP DeskJet 870Cse 
# PRINTER gs_cdj850 - HP DeskJet 870Cxi 
# PRINTER gs_cdj850 - HP DeskJet 890C 
# PRINTER gs_cdj850 - HP DeskJet 670C 
# PRINTER gs_cdj850 - HP DeskJet 680 
[ gs_cdj850 ]
tc=pcl_gs
gs_device=cdj850
gs_options=

# PRINTER gs_cdeskjet - HP DeskJet 500C
# PRINTER gs_cdeskjet - GhostScript with -sDEVICE=cdj500 -dBitsPerPixel=3 
[ gs_cdeskjet ]
tc=pcl_gs
gs_device=cdeskjet
gs_options=

# PRINTER gs_cdjcolor - GhostScript with -sDEVICE=cdj500 -dBitsPerPixel=24 
[ gs_cdjcolor ]
tc=pcl_gs
gs_device=cdjcolor
gs_options=

# PRINTER gs_cdjmono - HP DeskJet 500C 
# PRINTER gs_cdjmono - HP DeskJet 510 
# PRINTER gs_cdjmono - HP DeskJet 520 
# PRINTER gs_cdjmono - HP DeskJet 540C 
# PRINTER gs_cdjmono - HP DeskJet 693C 
# PRINTER gs_cdjmono - GhostScript with -sDEVICE=cdj500 -dBitsPerPixel=1 
[ gs_cdjmono ]
tc=pcl_gs
gs_device=cdjmono
gs_options=

# PRINTER gs_epsonc - Fujitsu DL-1100 
# PRINTER gs_epsonc - Fujitsu DL-2400 
[ gs_epsonc ]
tc=pcl_gs
gs_device=epsonc
gs_options=

# PRINTER gs_hl7x0 - Brother HL-720 
# PRINTER gs_hl7x0 - Brother HL-730 
# PRINTER gs_hl7x0 - Do not use hl7x0 with PCL compliant Brother HL-760. Use ljet4. 
[ gs_hl7x0 ]
tc=pcl_gs
gs_device=hl7x0
gs_options=

# PRINTER gs_laserjet - Bull Compuprint Pagemaster 415 
[ gs_laserjet ]
tc=pcl_gs
gs_device=laserjet
gs_options=

# PRINTER gs_lips3 - Canon LBP4+
[ gs_lips3 ]
tc=ghostscript
gs_device=lips3
gs_options=

# PRINTER gs_lj4dith - HP DeskJet 600 
[ gs_lj4dith ]
tc=pcl_gs
gs_device=lj4dith
gs_options=

# PRINTER gs_ljet2 - HP LaserJet II 
# PRINTER gs_ljet2 - Xerox 4030 
[ gs_ljet2 ]
tc=pcl_gs
gs_device=ljet2
gs_options=

# PRINTER gs_ljet3 - Tandy LP800 With LaserJet III emulation. 
[ gs_ljet3 ]
tc=pcl_gs
gs_device=ljet3
gs_options=

# PRINTER gs_ljet4 - Brother HL-660 
# PRINTER gs_ljet4 - Brother HL-760 600dpi 
# PRINTER gs_ljet4 - Epson EPL5700 300dpi OK
# PRINTER gs_ljet4 - HP DeskJet 600 margins wrong 
# PRINTER gs_ljet4 - HP DeskJet 870Cse 
# PRINTER gs_ljet4 - HP LaserJet 5 300dpi or 600dpi 
# PRINTER gs_ljet4 - HP LaserJet 5L 300dpi or 600dpi
# PRINTER gs_ljet4 - HP LaserJet 6L 600dpi
# PRINTER gs_ljet4 - HP LaserJet 1100 600dpi OK. 
# PRINTER gs_ljet4 - IBM Network Printer 17 
# PRINTER gs_ljet4 - IBM/Lexmark 4029 Margins wrong. 
# PRINTER gs_ljet4 - Lexmark Optra E+ 
# PRINTER gs_ljet4 - Lexmark Optra SC 1275 B/W only. 
# PRINTER gs_ljet4 - Oki OL410ex LED printer 300dpi or 600dpi 

[ gs_ljet4 ]
tc=pcl_gs
gs_device=ljet4
gs_options=

# PRINTER gs_ljetplus - HP LaserJet Plus 
# PRINTER gs_ljetplus - Canon Laser LBP-600 
# PRINTER gs_ljetplus - NEC SuperScript 860 
[ gs_ljetplus ]
tc=pcl_gs
gs_device=ljetplus
gs_options=

# PRINTER gs_pjxl300 - HP PaintJet XL300 
# PRINTER gs_pjxl300 - HP DeskJet 600
# PRINTER gs_pjxl300 - HP DeskJet 1200C 
# PRINTER gs_pjxl300 - HP DeskJet 1600C
[ gs_pjxl300 ]
tc=pcl_gs
gs_device=pjxl300
gs_options=

# PRINTER gs_r4081 - Ricoh 4081 laser printer 
# PRINTER gs_r4081 - Ricoh 6000 laser printer 
[ gs_r4081 ]
tc=ghostscript
gs_device=r4081
gs_options=

# PRINTER gs_uniprint - Canon BJC 610 
# PRINTER gs_uniprint - HP DeskJet 550C 
# PRINTER gs_uniprint - NEC P2X 
# PRINTER gs_uniprint - Epson Stylus Color 
# PRINTER gs_uniprint - Epson Stylus Color II 
# PRINTER gs_uniprint - Epson Stylus Color 500 
# PRINTER gs_uniprint - Epson Stylus Color 600 
# PRINTER gs_uniprint - Epson Stylus Color 800 
# PRINTER gs_uniprint - Epson Stylus Color 1520 
# PRINTER gs_uniprint - SUN rasterfile 
# PRINTER gs_uniprint - Canon BJC-210 Color
# PRINTER gs_uniprint - Epson Stylus Color 640
# PRINTER gs_uniprint - Epson Stylus Color 740
#
# Use the following
# gs @{MODEL}.upp -sOutputFile=- ....
#  
# The gs_unidriver is defined as
#
# /usr/bin/gs -q -dSAFER -dBATCH -sOutputFile=- @\%s{gs_device}.upp \%s{gs_options} - ]
#  
#  Device should then be @model.upp
#  The user can interface to this by using the ifhp options:
#
#  lp:
#    :ifhp=model=gs_uniprint,gs_device=bjc610a0
#
#  Canon BJC 610 (color, rendered)
#    bjc610a0.upp 360×360dpi plain paper, high speed
#    bjc610a1.upp 360×360dpi plain paper
#    bjc610a2.upp 360×360dpi coated paper
#    bjc610a3.upp 360×360dpi transparency film
#    bjc610a4.upp 360×360dpi back print film
#    bjc610a5.upp 360×360dpi fabric sheet
#    bjc610a6.upp 360×360dpi glossy paper
#    bjc610a7.upp 360×360dpi high gloss film
#    bjc610a8.upp 360×360dpi high resolution paper
#    bjc610b1.upp 720×720dpi plain paper
#    bjc610b2.upp 720×720dpi coated paper
#    bjc610b3.upp 720×720dpi transparency film
#    bjc610b4.upp 720×720dpi back print film
#    bjc610b6.upp 720×720dpi glossy paper
#    bjc610b7.upp 720×720dpi high-gloss paper
#    bjc610b8.upp 720×720dpi high resolution paper
#  HP DeskJet 550C
#    cdj550.upp 300×300dpi 32-bit CMYK
#  NEC P2X
#    necp2x.upp 360×360dpi 8-bit (Floyd-Steinberg)
#  Any Epson Stylus Color
#    stcany.upp 360×360dpi 4-bit, PostScript halftoning
#  Original Epson Stylus and Stylus Pro Color
#    stc.upp 360×360dpi 32-bit CMYK, 15-pin 
#    stc_l.upp 360×360dpi 4-bit, PostScript halftoning, weaved noWeave
#    stc_h.upp 720×720dpi 32-bit CMYK, 15-pin Weave
#    stc2.upp 360×360dpi 32-bit CMYK, 20-pin, Epson Stylus Color II(s)
#    stc2_h.upp 720×720dpi 32-bit CMYK, 20-pin, Epson Stylus Color II 
#    stc2s_h.upp 720×720dpi 32-bit CMYK, 20-pin, Epson Stylus Color IIs
#  Epson Stylus Color 500 (good transfer curves for plain paper)
#    stc500p.upp 360×360dpi 32-bit CMYK, noWeave, plain paper
#    stc500ph.upp 720×720dpi 32-bit CMYK, noWeave, plain paper
#  Epson Stylus Color 600, 32/90-inch weaving
#    stc600pl.upp 360×360dpi 32-bit CMYK, 32-pin, plain paper
#    stc600p.upp 720×720dpi 32-bit CMYK, 32-pin, plain paper
#    stc600ih.upp 1440×720dpi 32-bit CMYK, 30-pin, inkjet paper
#  Epson Stylus Color 800, 64/180-inch weaving
#    stc800pl.upp 360×360dpi 32-bit CMYK, 64-pin, plain paper
#    stc800p.upp 720×720dpi 32-bit CMYK, 64-pin, plain paper   
#    stc800ih.upp 1440×720dpi 32-bit CMYK, 62-pin, inkjet paper
#    stc1520h.upp 1440×720dpi 32-bit CMYK, 62-pin, inkjet paper
#      (This is erroneously described in the GhostScript
#       documentation as the stc1520.upp)

[ gs_uniprint ]
tc=pcl_gs
gs_converter= [ \%s{gs_unidriver} ]
# example: gs_device=
gs_device=
gs_options=

# PRINTER bjc610a0.upp - Canon BJC 610 (color, rendered) 360×360dpi plain paper, high speed
[ bjc610a0.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a0.upp

# PRINTER bjc610a1.upp - Canon BJC 610 (color, rendered) 360×360dpi plain paper
[ bjc610a1.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a1.upp

# PRINTER bjc610a2.upp - Canon BJC 610 (color, rendered) 360×360dpi coated paper
[ bjc610a2.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a2.upp

# PRINTER bjc610a3.upp - Canon BJC 610 (color, rendered) 360×360dpi transparency film
[ bjc610a3.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a3.upp

# PRINTER bjc610a4.upp - Canon BJC 610 (color, rendered) 360×360dpi back print film
[ bjc610a4.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a4.upp

# PRINTER bjc610a5.upp - Canon BJC 610 (color, rendered) 360×360dpi fabric sheet
[ bjc610a5.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a5.upp

# PRINTER bjc610a6.upp - Canon BJC 610 (color, rendered) 360×360dpi glossy paper
[ bjc610a6.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a6.upp

# PRINTER bjc610a7.upp - Canon BJC 610 (color, rendered) 360×360dpi high gloss film
[ bjc610a7.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a7.upp

# PRINTER bjc610a8.upp - Canon BJC 610 (color, rendered) 360×360dpi high resolution paper
[ bjc610a8.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610a8.upp

# PRINTER bjc610b1.upp - Canon BJC 610 (color, rendered) 720×720dpi plain paper
[ bjc610b1.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b1.upp

# PRINTER bjc610b2.upp - Canon BJC 610 (color, rendered) 720×720dpi coated paper
[ bjc610b2.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b2.upp

# PRINTER bjc610b3.upp - Canon BJC 610 (color, rendered) 720×720dpi transparency film
[ bjc610b3.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b3.upp

# PRINTER bjc610b4.upp - Canon BJC 610 (color, rendered) 720×720dpi back print film
[ bjc610b4.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b4.upp

# PRINTER bjc610b6.upp - Canon BJC 610 (color, rendered) 720×720dpi glossy paper
[ bjc610b6.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b6.upp

# PRINTER bjc610b7.upp - Canon BJC 610 (color, rendered) 720×720dpi high-gloss paper
[ bjc610b7.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b7.upp

# PRINTER bjc610b8.upp - Canon BJC 610 (color, rendered) 720×720dpi high resolution paper
[ bjc610b8.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=bjc610b8.upp

# PRINTER cdj550.upp - HP DeskJet 550C 300×300dpi 32-bit CMYK
[ cdj550.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=cdj550.upp

# PRINTER necp2x.upp - NEC P2X 360×360dpi 8-bit (Floyd-Steinberg)
[ necp2x.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=necp2x.upp

# PRINTER stcany.upp - Any Epson Stylus Color 360×360dpi 4-bit, PostScript halftoning
[ stcany.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stcany.upp

# PRINTER stc.upp - Original Epson Stylus and Stylus Pro Color 360×360dpi 32-bit CMYK, 15-pin 
[ stc.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc.upp

# PRINTER stc_l.upp - Original Epson Stylus and Stylus Pro Color 360×360dpi 4-bit, PostScript halftoning, weaved noWeave
[ stc_l.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc_l.upp

# PRINTER stc_h.upp - Original Epson Stylus and Stylus Pro Color 720×720dpi 32-bit CMYK, 15-pin Weave
[ stc_h.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc_h.upp

# PRINTER stc2.upp - Original Epson Stylus and Stylus Pro Color 360×360dpi 32-bit CMYK, 20-pin, Epson Stylus Color II(s)
[ stc2.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc2.upp

# PRINTER stc2_h.upp - Original Epson Stylus and Stylus Pro Color 720×720dpi 32-bit CMYK, 20-pin, Epson Stylus Color II 
[ stc2_h.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc2_h.upp

# PRINTER stc2s_h.upp - Original Epson Stylus and Stylus Pro Color 720×720dpi 32-bit CMYK, 20-pin, Epson Stylus Color IIs
[ stc2s_h.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc2s_h.upp

# PRINTER stc500p.upp - 360×360dpi Epson Stylus Color 500 32-bit CMYK, noWeave, plain paper
[ stc500p.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc500p.upp

# PRINTER stc500ph.upp - 720×720dpi Epson Stylus Color 500 32-bit CMYK, noWeave, plain paper
[ stc500ph.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc500ph.upp

# PRINTER stc600pl.upp - 360×360dpi Epson Stylus Color 600, 32/90-inch weaving 32-bit CMYK, 32-pin, plain paper
[ stc600pl.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc600pl.upp

# PRINTER stc600p.upp - 720×720dpi Epson Stylus Color 600, 32/90-inch weaving 32-bit CMYK, 32-pin, plain paper
[ stc600p.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc600p.upp

# PRINTER stc600ih.upp - 1440×720dpi Epson Stylus Color 600, 32/90-inch weaving 32-bit CMYK, 30-pin, inkjet paper
[ stc600ih.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc600ih.upp

# PRINTER stc800pl.upp - Epson Stylus Color 800, 64/180-inch weaving 360×360dpi 32-bit CMYK, 64-pin, plain paper
[ stc800pl.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc800pl.upp

# PRINTER stc800p.upp - Epson Stylus Color 800, 64/180-inch weaving 720×720dpi 32-bit CMYK, 64-pin, plain paper   
[ stc800p.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc800p.upp

# PRINTER stc800ih.upp - Epson Stylus Color 800, 64/180-inch weaving 1440×720dpi 32-bit CMYK, 62-pin, inkjet paper
[ stc800ih.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc800ih.upp

# PRINTER stc1520h.upp - Epson Stylus Color 800, 64/180-inch weaving 1440×720dpi 32-bit CMYK, 62-pin, inkjet paper
[ stc1520h.upp ]
tc=pcl_gs
gs_converter= [ %s{gs_unidriver} ]
gs_device=stc1520h.upp

##### This is the end of the standard ifhp.conf file.
##### Add your local files after this
##### If you want to override some entries, simply change the names to
##### something different, i.e. hp4 hp4.old
##### Here is a script to do this and then append your local file to the
##### end of the ifhp.conf file:
#####
##### #!/bin/sh
##### for i in $* ; do
#####   perl -spi.bak -e 's/ $i / $i.orig /g' ifhp.conf
##### done
##### 
##### sed -n -e '1,/XXX END XXX/p' ifhp.conf >ifhp.conf.new
##### sed '1,/XXX END XXX/d' ifhp.old >> ifhp.conf.new
#####
##### You can probably improve on this.
#####
#### XXX END XXX #####
